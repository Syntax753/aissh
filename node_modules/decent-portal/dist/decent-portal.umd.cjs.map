{"version":3,"file":"decent-portal.umd.cjs","sources":["../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/jsx-runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../src/components/contentButton/ContentButton.tsx","../src/components/decentBar/decentBarUtil.ts","../src/components/decentBar/icons/cog.svg","../src/components/modalDialogs/ModalDialog.tsx","../src/settings/types/Heading.ts","../src/persistence/mimeTypes.ts","../src/persistence/pathStore.ts","../src/persistence/pathUtil.ts","../src/persistence/settings.ts","../src/settings/types/SettingValues.ts","../src/appMetadata/types/SupportedModel.ts","../src/settings/types/SettingType.ts","../src/common/assertUtil.ts","../src/settings/types/Setting.ts","../src/settings/types/NumericSetting.ts","../src/settings/types/SupportedModelSetting.ts","../src/settings/types/TextSetting.ts","../src/settings/types/DisablementRule.ts","../src/settings/categories/settingCategoryUtil.ts","../src/settings/types/SettingCategory.ts","../src/models/modelIdUtil.ts","../src/common/movingAverageUtil.ts","../src/models/types/ModelDeviceProblemType.ts","../src/deviceCapabilities/storageUtil.ts","../src/deviceCapabilities/featureUtil.ts","../src/common/types/MovingAverageData.ts","../src/persistence/deviceHistory.ts","../src/models/types/ModelDeviceHistory.ts","../src/deviceCapabilities/memoryUtil.ts","../src/settings/categories/llmSettingsUtil.ts","../src/appMetadata/appMetadataUtil.ts","../src/appMetadata/fetchAppMetaData.ts","../src/appMetadata/types/AppMetaData.ts","../src/models/modelUtil.ts","../src/developer/devEnvUtil.ts","../src/settings/settingsDialog/setters/interactions/models.ts","../src/settings/categories/appSettingsUtil.ts","../src/common/windowUtil.ts","../src/components/toasts/Toast.ts","../src/components/toasts/toastUtil.ts","../src/components/toasts/ToastManager.ts","../src/common/dateUtil.ts","../src/persistence/localLog.ts","../src/localLogging/logUtil.ts","../src/settings/categories/interactions/loggingSettingsButtons.ts","../src/settings/categories/loggingSettingsUtil.ts","../src/components/decentBar/interactions/opening.ts","../src/settings/settingsUtil.ts","../src/components/popOver/types/Direction.ts","../src/components/popOver/popOverUtil.ts","../src/components/popOver/PopOver.tsx","../src/components/selector/Selector.tsx","../src/settings/settingsDialog/SettingCategorySelector.tsx","../src/settings/types/ValidationFailure.ts","../src/settings/settingsDialog/setters/setterUtil.ts","../src/settings/settingsDialog/setters/BooleanToggleSetter.tsx","../src/components/numericInput/NumericInput.tsx","../src/settings/settingsDialog/setters/NumericSetter.tsx","../src/settings/settingsDialog/setters/TextSetter.tsx","../src/settings/settingsDialog/setters/HeadingButton.tsx","../src/settings/settingsDialog/setters/Heading.tsx","../src/components/llmSpeed/LlmSpeed.tsx","../src/models/icons/memory.svg","../src/models/icons/database.svg","../src/models/icons/message-alert.svg","../src/models/icons/speedometer-slow.svg","../src/models/icons/code-braces.svg","../src/models/icons/beta.svg","../src/models/ModelDeviceProblemsList.tsx","../src/settings/settingsDialog/setters/SupportedModelPopoverContent.tsx","../src/settings/settingsDialog/setters/SupportedModelSetter.tsx","../src/settings/settingsDialog/SettingCategoryPanel.tsx","../src/components/modalDialogs/DialogFooter.tsx","../src/components/modalDialogs/DialogButton.tsx","../src/settings/settingsDialog/interactions/saving.ts","../src/components/modalDialogs/PageRefreshConfirmDialog.tsx","../src/settings/settingsDialog/SettingsDialog.tsx","../src/settings/settingsDialog/interactions/initialization.ts","../src/components/toasts/ToastMessage.tsx","../src/components/toasts/ToastPane.tsx","../src/components/decentBar/interactions/initialization.ts","../src/components/decentBar/DecentBar.tsx","../src/models/ModelDeviceProblemsDialog.tsx","../src/models/interactions/initialization.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsx = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !1,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n    exports.jsxs = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !0,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","import styles from './ContentButton.module.css';\n\ninterface IProps {\n  text:string,\n  onClick:any\n  disabled?:boolean\n}\n\nfunction ContentButton(props:IProps) {\n  const { text, onClick, disabled } = props;\n  const buttonClass = disabled ? styles.contentButtonDisabled : styles.contentButton;\n  const textClass = disabled ? styles.contentButtonTextDisabled : styles.contentButtonText;\n  return (\n    <button className={buttonClass} onClick={onClick} disabled={disabled}>\n      <span className={textClass}>{text}</span>\n    </button>\n  );\n}\n\nexport default ContentButton;","/* v8 ignore start */\nexport function isServingFromEnabledDomain(enabledDomains:string[]):boolean {\n  const currentDomain = window.location.hostname.toLowerCase();\n  return enabledDomains.some(domain => currentDomain === domain.toLowerCase() || currentDomain.endsWith(`.${domain.toLowerCase()}`));\n}\n\nexport function getBaseUrl():string {\n  const url = new URL(window.location.href);\n  return `${url.protocol}//${url.hostname}${url.port ? `:${url.port}` : ''}`;\n}\n/* v8 ignore end */","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M12,15.5A3.5,3.5%200%200,1%208.5,12A3.5,3.5%200%200,1%2012,8.5A3.5,3.5%200%200,1%2015.5,12A3.5,3.5%200%200,1%2012,15.5M19.43,12.97C19.47,12.65%2019.5,12.33%2019.5,12C19.5,11.67%2019.47,11.34%2019.43,11L21.54,9.37C21.73,9.22%2021.78,8.95%2021.66,8.73L19.66,5.27C19.54,5.05%2019.27,4.96%2019.05,5.05L16.56,6.05C16.04,5.66%2015.5,5.32%2014.87,5.07L14.5,2.42C14.46,2.18%2014.25,2%2014,2H10C9.75,2%209.54,2.18%209.5,2.42L9.13,5.07C8.5,5.32%207.96,5.66%207.44,6.05L4.95,5.05C4.73,4.96%204.46,5.05%204.34,5.27L2.34,8.73C2.21,8.95%202.27,9.22%202.46,9.37L4.57,11C4.53,11.34%204.5,11.67%204.5,12C4.5,12.33%204.53,12.65%204.57,12.97L2.46,14.63C2.27,14.78%202.21,15.05%202.34,15.27L4.34,18.73C4.46,18.95%204.73,19.03%204.95,18.95L7.44,17.94C7.96,18.34%208.5,18.68%209.13,18.93L9.5,21.58C9.54,21.82%209.75,22%2010,22H14C14.25,22%2014.46,21.82%2014.5,21.58L14.87,18.93C15.5,18.67%2016.04,18.34%2016.56,17.94L19.05,18.95C19.27,19.03%2019.54,18.95%2019.66,18.73L21.66,15.27C21.78,15.05%2021.73,14.78%2021.54,14.63L19.43,12.97Z'%20/%3e%3c/svg%3e\"","import styles from './ModalDialog.module.css';\nimport {PropsWithChildren} from \"react\";\n\ninterface IProps {\n  isOpen:boolean,\n  onCancel?:() => void,\n  title:string\n}\n\nfunction _doNothing(event:any) { event.stopPropagation(); }\n\n// Make sure any changes handle this edge case: 1. click within the dialog, 2. drag outside of the dialog (overlay area),\n// 3. release mouse. It should not call onCancel() in this case.\n\nfunction ModalDialog(props:PropsWithChildren<IProps>) {\n  if (!props.isOpen) return null;\n  const {children, onCancel, title} = props;\n  const fullscreenOverlayStyle = `${styles.fullscreenOverlay} ${onCancel ? styles.clickable : ''}`;\n  return (\n    <div className={fullscreenOverlayStyle} onMouseDown={onCancel}>\n      <div className={styles.dialog} onClick={_doNothing} onMouseDown={_doNothing}>\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default ModalDialog;","// Avoid use of \"@\" alias in type file imports so that types exported from the library don't include them.\nexport const HEADING_TYPE = 'HEADING';\n\n// Headings don't hold settings, and aren't (de)serialized to storage. They are used for visually grouping in UI.\n// The label value is displayed as informational text. Clickable buttons can optionally be added to the heading.\ntype Heading = {\n  id?:string,\n  description?:string,\n  precedeSettingId:string|null, // The id of the setting for this heading to precede, or null if it comes after all settings in the category.\n  buttons?:{label:string, value:string}[],\n  onButtonClick?:(value:string) => void,\n}\n\nexport function duplicateHeading(heading:Heading):Heading {\n  return {\n    ...heading, \n    buttons: heading.buttons ? [...heading.buttons] : undefined\n  };\n}\n\nexport default Heading;","export const MIMETYPE_AUDIO_WAV = 'audio/wav';\nexport const MIMETYPE_GIF = 'image/gif';\nexport const MIMETYPE_JPEG = 'image/jpeg';\nexport const MIMETYPE_OCTET_STREAM = 'application/octet-stream';\nexport const MIMETYPE_PLAIN_TEXT = 'text/plain';\nexport const MIMETYPE_SVG = 'image/svg+xml';\nexport const MIMETYPE_PNG = 'image/png';\nexport const MIMETYPE_ZIP = 'application/zip';\nexport const MIMETYPE_JSON = 'application/json';\nexport const MIMETYPE_XLS = 'application/vnd.ms-excel';\nexport const MIMETYPE_XLSX = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\nexport const MIMETYPE_CSV = 'text/csv';\nexport const MIMETYPE_TSV = 'text/tsv';\n\ntype MimeTypeToExtensionMap = {\n  [key:string]:string\n}\n\nconst MIMETYPE_TO_EXTENSION_MAP:MimeTypeToExtensionMap = {\n  [MIMETYPE_AUDIO_WAV]: 'wav',\n  [MIMETYPE_GIF]: 'gif',\n  [MIMETYPE_JPEG]: 'jpg',\n  [MIMETYPE_OCTET_STREAM]: 'bin',\n  [MIMETYPE_PLAIN_TEXT]: 'txt',\n  [MIMETYPE_PNG]: 'png',\n  [MIMETYPE_JSON]: 'json'\n};\n\nconst DEFAULT_EXTENSION = '';\n\nexport function mimeTypeToExtension(mimeType:string):string {\n  return MIMETYPE_TO_EXTENSION_MAP[mimeType] ?? DEFAULT_EXTENSION;\n}","import {keyToPath} from \"./pathUtil\";\nimport {MIMETYPE_OCTET_STREAM, MIMETYPE_PLAIN_TEXT} from \"./mimeTypes\";\nimport {createNonGlobalRegex, escapeRegexCharacters} from \"@/common/regExUtil\";\n\n// This pathStore module is like the one generated by CDA, but importantly, it accesses the DecentPortal store rather than the app store.\n// Later, I need to update this to use subdomain protection of persistent storage data.\n\nconst SCHEMA_VERSION = 1; // Only incremented if IndexedDb schema changes, which is decoupled from app data version.\nconst APP_DATA_VERSION = 1; // Increment each time a production release is made where the format of values stored in KeyValueRecord changed.\nconst DB_NAME = `DecentPortal-${SCHEMA_VERSION}`;\nconst KEY_VALUE_STORE = 'KeyValue';\nconst PATH_INDEX_NAME = 'pathIndex';\n\ntype IndexConfig = {\n  name:string,\n  keypath:string,\n  options:IDBIndexParameters\n}\n\nconst SCHEMA = {\n  __version:SCHEMA_VERSION,\n  [KEY_VALUE_STORE]: {\n    __options:{keyPath:'key'},\n    __indexes:[{name:PATH_INDEX_NAME, keypath:'path', options:{unique:false, multiEntry:false}}]\n  }\n};\n\nexport type KeyValueRecord = {\n  key:string,\n  path:string,\n  appDataVersion:number,\n  mimeType:string,\n  lastModified:number,\n  text:string|null,\n  bytes:Uint8Array|null\n};\n\n//\n// Helper functions\n//\n\nfunction _getStoreNamesFromSchema(schema:any):string[] {\n  return Object.keys(schema).filter(key => key !== '__version');\n}\n\nfunction _createStores(db:IDBDatabase, schema:any) {\n  const storeNames = _getStoreNamesFromSchema(schema);\n  storeNames.forEach(storeName => {\n    const storeSchema = schema[storeName];\n    const store = db.createObjectStore(storeName, storeSchema.__options);\n    const indexes:IndexConfig[] = storeSchema.__indexes ?? [];\n    indexes.forEach(indexConfig => {\n      store.createIndex(indexConfig.name, indexConfig.keypath, indexConfig.options);\n    });\n  });\n}\n\nasync function _open(name:string, schema:any):Promise<IDBDatabase> {\n  const version = schema.__version;\n  let wereStoresCreated = false;\n  return new Promise<IDBDatabase>((resolve, reject) => {\n    const request = indexedDB.open(name, version);\n    request.onerror = (event:any) => reject(`Failed to open \"${name}\" database with error code ${event.target.errorCode}.`);\n    request.onupgradeneeded = (event:any) => {\n      const db = event.target.result as IDBDatabase;\n      if (schema.__version === 1) { _createStores(db, schema); } else { throw new Error('Schema migration is unimplemented.'); } // In this case, probably old code is running against a newer schema. Check for updates in the template to copy over.\n      wereStoresCreated = true;\n    }\n    request.onsuccess = (event:any) => {\n      const db = event.target.result as IDBDatabase;\n      db.onerror = (event:any) => { throw Error(\"Database error: \" + event.target.errorCode); } // Not using reject() since error could come later after this promise completes.\n      if (wereStoresCreated) _populateStores(db, schema);\n      resolve(db);\n    }\n  });\n}\n\nasync function _get(db:IDBDatabase, storeName:string, key:string):Promise<object> {\n  const transaction = db.transaction(storeName);\n  const objectStore = transaction.objectStore(storeName);\n  const request = objectStore.get(key);\n  return new Promise((resolve, reject) => {\n    transaction.onerror = (event:any) => reject(`Failed to get from \"${storeName} with error code ${event.target.errorCode}.`);\n    transaction.oncomplete = (_event:any) => resolve(request.result)\n  });\n}\n\nasync function _put(db:IDBDatabase, storeName:string, objectToStore:object):Promise<void> {\n  const transaction = db.transaction(storeName, 'readwrite');\n  const objectStore = transaction.objectStore(storeName);\n  objectStore.put(objectToStore);\n  return new Promise((resolve, reject) => {\n    transaction.onerror = (event:any) => reject(`Failed to put to \"${storeName} with error code ${event.target.errorCode}.`);\n    transaction.oncomplete = () => resolve();\n  });\n  \n}\n\nasync function _delete(db:IDBDatabase, storeName:string, key:string):Promise<void> {\n  const transaction = db.transaction(storeName, 'readwrite');\n  const objectStore = transaction.objectStore(storeName);\n  objectStore.delete(key);\n  return new Promise((resolve, reject) => {\n    transaction.onerror = (event:any) => reject(`Failed to delete record at \"${key}\" in \"${storeName} with error code ${event.target.errorCode}.`);\n    transaction.oncomplete = () => resolve();\n  });\n}\n\nexport async function deleteDatabase():Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new Promise((resolve, reject) => {\n    request.onerror = (event:any) => reject(`Failed to delete \"${DB_NAME}}\" database with error code ${event.target.errorCode}.`);\n    request.onsuccess = () => resolve();\n  });\n}\n\nasync function _getRecordByKey(key:string):Promise<KeyValueRecord|null> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const record = await _get(db, KEY_VALUE_STORE, key) as KeyValueRecord;\n  if (!record) return null; // No record found.\n  if (record.appDataVersion === APP_DATA_VERSION) return record;\n  if (record.appDataVersion > APP_DATA_VERSION) throw new Error(`Record at ${key} is v${record.appDataVersion} while app only knows versions up to v${APP_DATA_VERSION}.`); // TODO - need to surface this to UI to trigger a reload, and also handle the case where reloading doesn't fix it.\n  _upgradeRecord(record);\n  _put(db, KEY_VALUE_STORE, record);\n  return record;\n}\n\n\nasync function _setFieldValue(key:string, fieldName:string, fieldValue:any, mimeType:string) {\n  const db = await _open(DB_NAME, SCHEMA);\n  const record = await _getRecordByKey(key) ?? { key } as KeyValueRecord;\n  (record as any)[fieldName] = fieldValue;\n  record.path = keyToPath(key);\n  record.appDataVersion = APP_DATA_VERSION;\n  record.mimeType = mimeType;\n  record.lastModified = Date.now();\n  await _put(db, KEY_VALUE_STORE, record);\n}\n\nfunction _changePathOfKey(key:string, path:string, nextPath:string):string {\n  return nextPath + key.slice(path.length);\n}\n\nasync function _replaceRecordUsingNewKey(db:IDBDatabase, key:string, nextKey:string, updateLastModified:boolean) {\n  const record:KeyValueRecord|null = await _get(db, KEY_VALUE_STORE, key) as KeyValueRecord|null;\n  if (!record) throw Error(`Did not find existing record matching \"${key}\" key.`);\n  record.key = nextKey;\n  record.path = keyToPath(nextKey);\n  if (updateLastModified) record.lastModified = Date.now();\n  await _put(db, KEY_VALUE_STORE, record);\n  await _delete(db, KEY_VALUE_STORE, key);\n}\n\nasync function _renamePath(db:IDBDatabase, currentPath:string, nextPath:string) {\n  const currentPathEscaped = escapeRegexCharacters(currentPath);\n  const regExp:RegExp = new RegExp(`${currentPathEscaped}.*`, '');\n  const descendentKeys:string[] = await getAllKeysMatchingRegex(regExp);\n\n  const promises:Promise<void>[] = [];\n  for(let keyI = 0; keyI < descendentKeys.length; ++keyI) {\n    const descendentKey:string = descendentKeys[keyI];\n    const descendentNextKey = _changePathOfKey(descendentKey, currentPath, nextPath);\n    promises.push(_replaceRecordUsingNewKey(db, descendentKey, descendentNextKey, false));\n  }\n  await Promise.all(promises);\n}\n\n//\n// Modification points\n//\n\nfunction _populateStores(_db:IDBDatabase, _schema:any) {\n  // For adding any initial data to empty stores after they've just been created.\n}\n\n// This function will be called any time that _getRecordByKey() is called and the record retrieved has a lower appDataVersion than APP_DATA_VERSION.\n// You have to write a handler for each kind of record that has a change in format. If you never increment APP_DATA_VERSION, then you never\n// need to write these handlers.\nfunction _upgradeRecord(record:KeyValueRecord) {\n\n  /* \n  // Example handlers - JSON for a street address was updated from v1 to v2 to include a new \"country\" field. \n  // And from v2 to v3, the \"state\" and \"zipCode\" fields were renamed to \"stateOrProvince\" and \"postalCode\".\n\n  // v1 -> v2 upgrades\n  if (record.appDataVersion === 1) {\n    if (record.path === 'userAddress' && record.text) { \n      let object:any = JSON.parse(record.text);\n      object.countryCode = 'US';\n      record.appDataVersion = 2;\n    } else { // In this fictitious case, we know that all other types of records had no format change.\n      record.appDataVersion = 2;\n    }\n  }\n\n  // v2 -> v3 upgrades (cascades from above handler to cover v1 -> v3)\n  if (record.appDataVersion == 2) {\n    if (record.path === 'userAddress' && record.text) {\n      let object:any = JSON.parse(record.text);\n      object.stateOrProvince = object.state;\n      object.postalCode = object.zipCode;\n      delete object.state;\n      delete object.zipCode;\n      record.text = JSON.stringify(object);\n      record.appDataVersion = 3;\n    } else {\n      record.appDataVersion = 3;\n    }\n  } */\n  \n  if (record.appDataVersion !== APP_DATA_VERSION) throw new Error(`Record at ${record.key} did not have upgrade handling.`);\n  return record;\n}\n\n//\n// API\n//\n\nexport async function getText(key:string):Promise<string|null> {\n  const record = await _getRecordByKey(key);\n  return record?.text ?? null;\n}\n\n// `since` is a seconds-since-1970 timestamp. If you have a Date object, you can use date.getTime() to get this value.\nexport async function getTextIfModified(key:string, since:number):Promise<string|null> {\n  const record = await _getRecordByKey(key);\n  return (record && record.text !== null && record.lastModified > since) ? record.text : null;\n}\n\nexport async function getBytes(key:string):Promise<Uint8Array|null> {\n  const record = await _getRecordByKey(key);\n  return record?.bytes ?? null;\n}\n\n// `since` is a seconds-since-1970 timestamp. If you have a Date object, you can use date.getTime() to get this value.\nexport async function getBytesIfModified(key:string, since:number):Promise<Uint8Array|null> {\n  const record = await _getRecordByKey(key);\n  return (record && record.bytes !== null && record.lastModified > since) ? record.bytes : null;\n}\n\nexport async function setText(key:string, text:string|null, mimeType:string = MIMETYPE_PLAIN_TEXT) {\n  await _setFieldValue(key, 'text', text, mimeType);\n}\n\nexport async function setBytes(key:string, bytes:Uint8Array|null, mimeType = MIMETYPE_OCTET_STREAM) {\n  await _setFieldValue(key, 'bytes', bytes, mimeType);\n}\n\nexport async function doesDatabaseExist():Promise<boolean> {\n  const dbInfos:IDBDatabaseInfo[] = await indexedDB.databases();\n  const found = dbInfos.find(dbInfo => dbInfo.name === DB_NAME);\n  return found !== undefined;\n}\n\nexport async function getAllKeys():Promise<string[]> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE);\n  const objectStore = transaction.objectStore(KEY_VALUE_STORE);\n  const request = objectStore.getAllKeys();\n  return new Promise((resolve, reject) => {\n    request.onerror = (event:any) => reject(`Failed to get all keys with error code ${event.target.errorCode}.`);\n    request.onsuccess = () => resolve(request.result as string[])\n  });\n}\n\nexport async function getAllKeysAtPath(path:string):Promise<string[]> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE);\n  const objectStore = transaction.objectStore(KEY_VALUE_STORE);\n  const pathIndex = objectStore.index(PATH_INDEX_NAME);\n  const request = pathIndex.getAllKeys(path);\n  return new Promise((resolve, reject) => {\n    request.onerror = (event:any) => reject(`Failed to get all keys from \"${path}\" path with error code ${event.target.errorCode}.`);\n    request.onsuccess = () => resolve(request.result as string[]);\n  });\n}\n\nexport async function getAllKeysMatchingRegex(regex:RegExp):Promise<string[]> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE);\n  const objectStore = transaction.objectStore(KEY_VALUE_STORE);\n  const request = objectStore.getAllKeys();\n  regex = createNonGlobalRegex(regex);\n  return new Promise((resolve, reject) => {\n    request.onerror = (event:any) => reject(`Failed to get all keys with error code ${event.target.errorCode}.`);\n    request.onsuccess = () => {\n      const keys:string[] = request.result as string[];\n      const filteredKeys = keys.filter(key => regex.test(key));\n      resolve(filteredKeys);\n    }\n  });\n}\n\nexport async function getAllValuesAtPath(path:string):Promise<KeyValueRecord[]> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE);\n  const objectStore = transaction.objectStore(KEY_VALUE_STORE);\n  const pathIndex = objectStore.index(PATH_INDEX_NAME);\n  const request = pathIndex.getAll(path);\n  return new Promise((resolve, reject) => {\n    request.onerror = (event:any) => reject(`Failed to get all values from \"${path}\" path with error code ${event.target.errorCode}.`);\n    request.onsuccess = () => resolve(request.result as KeyValueRecord[]);\n  });\n}\n\nexport async function getValuesForKeys(keys:string[]):Promise<KeyValueRecord[]> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE);\n  const objectStore = transaction.objectStore(KEY_VALUE_STORE);\n  \n  function _getValueByKey(key:string):Promise<KeyValueRecord> {\n    const request = objectStore.get(key);\n    return new Promise((resolve, reject) => {\n      request.onerror = (event:any) => reject(`Failed to get ${key} from \"${KEY_VALUE_STORE} with error code ${event.target.errorCode}.`);\n      request.onsuccess = (_event:any) => resolve(request.result)\n    });\n  }\n\n  const promises = keys.map(_key => _getValueByKey(_key));\n  return Promise.all(promises);\n}\n\nexport async function renamePath(currentPath:string, nextPath:string):Promise<void> {\n  const db = await _open(DB_NAME, SCHEMA);\n  return _renamePath(db, currentPath, nextPath);\n}\n\nexport async function renameKey(currentKey:string, nextKey:string):Promise<void> {\n  const db = await _open(DB_NAME, SCHEMA);\n  await _replaceRecordUsingNewKey(db, currentKey, nextKey, true);\n  const currentDescendantPath = `${currentKey}/`;\n  const nextDescendantPath = `${nextKey}/`;\n  return await _renamePath(db, currentDescendantPath, nextDescendantPath);\n}\n\nexport async function deleteByKey(key:string):Promise<void> {\n  const db = await _open(DB_NAME, SCHEMA);\n  await _delete(db, KEY_VALUE_STORE, key);\n}\n\nexport async function deleteAllKeys(keys:string[]):Promise<void> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE, 'readwrite');\n  const objectStore = transaction.objectStore(KEY_VALUE_STORE);\n  keys.forEach(key => objectStore.delete(key));\n  return new Promise((resolve, reject) => {\n    transaction.onerror = (event:any) => reject(`Failed to delete records with error code ${event.target.errorCode}.`);\n    transaction.oncomplete = () => resolve();\n  });\n}\n\nexport async function deleteAllKeysAtPathExcept(path:string, exceptKeys:string[]) {\n  const keys = await getAllKeysAtPath(path);\n  const keysToDelete = keys.filter(key => !exceptKeys.includes(key));\n  if (!keysToDelete.length) return;\n  await deleteAllKeys(keysToDelete);\n}\n\nexport async function deleteAllKeysAtPath(path:string):Promise<void> {\n  const keys = await getAllKeysAtPath(path);\n  if (!keys.length) return;\n  await deleteAllKeys(keys);\n}\n\nexport async function doesKeyExist(key:string):Promise<boolean> {\n  const db = await _open(DB_NAME, SCHEMA);\n  const transaction = db.transaction(KEY_VALUE_STORE, 'readonly');\n  const cursorRequest = transaction.objectStore(KEY_VALUE_STORE).openCursor(key);\n  return new Promise((resolve, reject) => {\n    cursorRequest.onerror = (event:any) => reject(`Failed to check if key \"${key}\" exists with error code ${event.target.errorCode}.`);\n    cursorRequest.onsuccess = (event:any) => {\n      const cursor = event.target.result;\n      resolve(cursor !== null);\n    }\n  });\n}","export function keyToPath(key:string):string {\n  const pathEnd = key.lastIndexOf('/') + 1;\n  return key.substring(0, pathEnd);\n}\n\nexport function keyToName(key:string):string {\n  const pathEnd = key.lastIndexOf('/') + 1;\n  return key.substring(pathEnd);\n}\n\nexport function fillTemplate(template:string, variables:any):string {\n  let filled = template;\n  const variableNames = Object.keys(variables);\n  variableNames.forEach(variableName => {\n    const variableValue = variables[variableName];\n    filled = filled.replaceAll('{' + variableName + '}', variableValue);\n  });\n  return filled;\n}\n\nexport function splitFilenameAndExtension(filenameWithExtension:string):[filename:string, extension:string] {\n  if (filenameWithExtension === '') return ['', ''];\n  const tokens = filenameWithExtension.split('.');\n  if (tokens.length === 1) return [tokens[0], '']; // No extension.\n  const extension = tokens.pop()?.toLowerCase() as string; // Implied by previous code that pop() will not return undefined.\n  const filename = tokens.join('.');\n  return [filename, extension];\n}","import SettingValues, { isSettingValuesFormat } from \"@/settings/types/SettingValues\";\nimport { getText, setText } from \"./pathStore\";\n\nfunction _categoryNameToPath(categoryName:string) {\n  return `/settings/${categoryName}.json`;\n}\n\nexport async function getCategorySettings(categoryName:string):Promise<SettingValues|null> {\n   const path = _categoryNameToPath(categoryName);\n   const settingsJson = await getText(path);\n   if (!settingsJson) return null;\n   const settings:SettingValues = JSON.parse(settingsJson);\n   if (!isSettingValuesFormat(settings)) {\n     console.error(`Settings for category \"${categoryName}\" are invalid.`);\n     return null;\n   }\n   return Object.keys(settings).length > 0 ? settings : null;\n}\n\nexport async function setCategorySettings(categoryName:string, settingValues:SettingValues):Promise<void> {\n  const path = _categoryNameToPath(categoryName);\n  const settingsJson = JSON.stringify(settingValues);\n  await setText(path, settingsJson);\n}","type SettingValues = { [key:string]:number|string|boolean };\n\nexport function isSettingValuesFormat(maybeValues:any): boolean {\n  return !!maybeValues && \n    typeof maybeValues === 'object' &&\n    !Array.isArray(maybeValues) &&\n    Object.keys(maybeValues).every(key =>\n      typeof key === 'string' &&\n      (typeof maybeValues[key] === 'number' ||\n      typeof maybeValues[key] === 'string' ||\n      typeof maybeValues[key] === 'boolean')\n    );\n}\n\nexport default SettingValues;","type SupportedModel = {\n  id:string;                  // Model ID.\n  appBehaviorSummary: string; // Summary of how the model behaves in the app.\n  beta?: boolean;             // Optional flag indicating if the model is in beta.\n}\n\nexport function isSupportedModelFormat(maybeModel:any): boolean {\n  if (!maybeModel || typeof maybeModel !== 'object') return false;\n  if (typeof maybeModel.id !== 'string') return false;\n  if (typeof maybeModel.appBehaviorSummary !== 'string') return false;\n  if (maybeModel.beta !== undefined && typeof maybeModel.beta !== 'boolean') return false;\n  return true;\n}\n\nexport function duplicateSupportedModel(model:SupportedModel):SupportedModel {\n  return { ...model };\n}\n\nexport default SupportedModel;","// Add alphabetically, but don't reassign enum values, or stored data will be incompatible.\nenum SettingType {\n  BOOLEAN_TOGGLE = 1,\n  NUMERIC = 2,\n  SUPPORTED_MODEL = 3,\n  TEXT = 0,\n}\n\nexport default SettingType;","/* v8 ignore start */\n\n/* Keep the terser config of pure functions within vite.config.ts including\n   any exports from this module so that they strip out of bundles. */\n\nexport function assertNonNullable<T>(x:T, message:string = 'Value is unexpectedly undefined/null.'): \n    asserts x is NonNullable<T> {\n  if (x === undefined || x === null) throw new Error(message);\n}\n\nexport function assertTruthy<T>(condition:T, message:string = 'Condition is unexpectedly falsy.'):\n    asserts condition is Exclude<T, 0 | false | '' | null | undefined>{\n  if (!condition) throw new Error(message);\n}\n\nexport function assert(condition:boolean, message:string = 'Assertion failed.'):\n    asserts condition {\n  if (!condition) throw new Error(message);\n}\n\nexport function botch(message:string = 'Botched!'):never {\n  throw new Error(message);\n}\n\n/* v8 ignore end */","import SupportedModelSetting, { duplicateSupportedModelSetting } from \"./SupportedModelSetting\";\nimport { botch } from \"../../common/assertUtil\";\nimport BooleanToggleSetting, { duplicateBooleanToggleSetting, isBooleanToggleSettingFormat } from \"./BooleanToggleSetting\";\nimport NumericSetting, { duplicateNumericSetting, isNumericSettingFormat } from \"./NumericSetting\";\nimport { isSettingBaseFormat } from \"./SettingBase\";\nimport SettingType from \"./SettingType\";\nimport TextSetting, { duplicateTextSetting, isTextSettingFormat } from \"./TextSetting\";\nimport { isSupportedModelSettingFormat } from \"./SupportedModelSetting\";\n\n// Don't add any types that aren't intended to persist setting data. Presentation-only types can be added to SettingCategory type instead.\ntype Setting = \n  BooleanToggleSetting |\n  NumericSetting | \n  SupportedModelSetting |\n  TextSetting;\n\nexport function isSettingFormat(maybeSetting:any):boolean {\n  if (!isSettingBaseFormat(maybeSetting)) return false;\n  switch (maybeSetting.type) {\n    case SettingType.BOOLEAN_TOGGLE: return isBooleanToggleSettingFormat(maybeSetting);\n    case SettingType.NUMERIC: return isNumericSettingFormat(maybeSetting);\n    case SettingType.TEXT: return isTextSettingFormat(maybeSetting);\n    case SettingType.SUPPORTED_MODEL: return isSupportedModelSettingFormat(maybeSetting);\n    /* v8 ignore start */\n    default: \n      botch(); // isSettingBaseFormat() should have caught this.\n    /* v8 ignore end */\n  }\n}\n\nexport function duplicateSetting(setting:Setting):Setting {\n  switch (setting.type) {\n    case SettingType.BOOLEAN_TOGGLE: return duplicateBooleanToggleSetting(setting);\n    case SettingType.NUMERIC: return duplicateNumericSetting(setting);\n    case SettingType.SUPPORTED_MODEL: return duplicateSupportedModelSetting(setting);\n    case SettingType.TEXT: return duplicateTextSetting(setting);\n    /* v8 ignore start */\n    default: \n      botch();\n    /* v8 ignore end */\n  }\n}\n\nexport default Setting;","import SettingBase from \"./SettingBase\"\nimport SettingType from \"./SettingType\"\n\ntype NumericRangeSetting = SettingBase & {\n  type:SettingType.NUMERIC,\n  value:number,\n  minValue:number,\n  maxValue:number,\n  allowDecimals?:boolean\n}\n\nexport function isNumericSettingFormat(maybeSetting:any):boolean {\n  return !!maybeSetting && \n         maybeSetting.type === SettingType.NUMERIC &&\n         typeof maybeSetting.value === 'number' &&\n         typeof maybeSetting.minValue === 'number' &&\n         typeof maybeSetting.maxValue === 'number' &&\n         (maybeSetting.allowDecimals === undefined || typeof maybeSetting.allowDecimals === 'boolean');\n}\n\nexport function duplicateNumericSetting(setting:NumericRangeSetting):NumericRangeSetting {\n  return { ...setting };\n}\n\nexport default NumericRangeSetting;","import SupportedModel, { duplicateSupportedModel, isSupportedModelFormat } from \"../../appMetadata/types/SupportedModel\";\nimport SettingBase from \"./SettingBase\"\nimport SettingType from \"./SettingType\"\n\ntype SupportedModelSetting = SettingBase & {\n  type:SettingType.SUPPORTED_MODEL,\n  value:string,\n  models:SupportedModel[]\n}\n\nexport function isSupportedModelSettingFormat(maybeSetting:any):boolean {\n  return !!maybeSetting && \n         maybeSetting.type === SettingType.SUPPORTED_MODEL &&\n         typeof maybeSetting.value === 'string' &&\n         maybeSetting.models &&\n         Array.isArray(maybeSetting.models) &&\n         maybeSetting.models.every(isSupportedModelFormat);\n}\n\nexport function duplicateSupportedModelSetting(setting:SupportedModelSetting):SupportedModelSetting {\n  return { ...setting,\n    models: setting.models.map(duplicateSupportedModel)\n  };\n}\n\nexport default SupportedModelSetting;","import SettingBase from './SettingBase';\nimport SettingType from './SettingType';\n\ntype TextSetting = SettingBase & {\n  type:SettingType.TEXT,\n  value:string,\n  placeholder?:string\n}\n\nexport function isTextSettingFormat(maybeSetting:any):boolean {\n  return !!maybeSetting &&\n         maybeSetting.type === SettingType.TEXT &&\n         typeof maybeSetting.value === 'string' &&\n         (maybeSetting.placeholder === undefined || typeof maybeSetting.placeholder === 'string');\n}\n\nexport function duplicateTextSetting(setting:TextSetting):TextSetting {\n  return { ...setting };\n}\n\nexport default TextSetting;","type DisablementRule = {\n  targetSettingId: string;\n  criteriaSettingId: string;\n  criteriaValue: any; // The value that the criteria setting must have to disable the target.\n}\n\nexport function duplicateDisablementRule(rule: DisablementRule): DisablementRule {\n  return {...rule};\n}\n\nexport default DisablementRule;","import Setting, { duplicateSetting } from \"@/settings/types/Setting\";\nimport SettingCategory, { duplicateSettingCategory } from \"@/settings/types/SettingCategory\";\nimport SettingValues from \"../types/SettingValues\";\n\nfunction _findMatchingSettingIndex(settings:Setting[], settingId:string):number {\n  for (let i = 0; i < settings.length; i++) {\n    if (settings[i].id === settingId) return i;\n  }\n  return -1;\n}\n\nexport function mergeSettingValuesIntoSettings(settings:Setting[], settingValues:SettingValues):Setting[] {\n  const nextSettings = settings.map(duplicateSetting);\n  Object.keys(settingValues).forEach(settingId => {\n    const defaultSettingIndex = _findMatchingSettingIndex(nextSettings, settingId);\n    if (defaultSettingIndex !== -1) nextSettings[defaultSettingIndex].value = settingValues[settingId];\n  });\n  return nextSettings;\n}\n\nexport function mergeSettingValuesIntoCategory(category:SettingCategory, settingValues:SettingValues):SettingCategory {\n  const nextCategory = duplicateSettingCategory(category);\n  nextCategory.settings = mergeSettingValuesIntoSettings(nextCategory.settings, settingValues);\n  return nextCategory;\n}\n\nexport function settingsToSettingValues(settings:Setting[]):SettingValues {\n  const settingValues:SettingValues = {};\n  settings.forEach(setting => {\n    if (setting.id) {\n      settingValues[setting.id] = setting.value;\n    }\n  });\n  return settingValues;\n}","import DisablementRule, { duplicateDisablementRule } from \"./DisablementRule\";\nimport Heading, { duplicateHeading } from \"./Heading\";\nimport Setting, { duplicateSetting } from \"./Setting\";\n\n/* A category is a container for settings and the rules for their presentation. Some setting-specific data\n   (e.g., disablementRules) is purposefully put in the SettingCategory rather than in the Setting type to keep \n   the settings member representing data that changes and needs persistence. */\ntype SettingCategory = {\n  id:string;\n  name:string; // Display name shown on the settings page.\n  description:string;\n  headings?:Heading[];\n  settings:Setting[];\n  disablementRules?:DisablementRule[]; // Rules to disable settings based on other settings' values.\n};\n\nexport function duplicateSettingCategory(category:SettingCategory):SettingCategory {\n  return {\n    name: category.name,\n    id: category.id,\n    description: category.description,\n    headings: category.headings ? category.headings.map(duplicateHeading) : undefined,\n    settings: category.settings.map(duplicateSetting),\n    disablementRules: category.disablementRules ? category.disablementRules.map(duplicateDisablementRule) : undefined\n  };\n}\n\nexport default SettingCategory;","import { assert } from \"@/common/assertUtil\";\n\nfunction _isSizePart(part:string):boolean {\n  if (part.toLowerCase() === 'mini') return true;\n  const lastChar = part[part.length-1];\n  if ('BbMm'.indexOf(lastChar) === -1 || part.length < 2) return false;\n  for(let i = 0; i < part.length - 1; ++i) {\n    const c = part[i];\n    if ('0123456789.'.indexOf(c) === -1) return false;\n  }\n  return true;\n}\n\nfunction _isDistillPart(part:string):boolean {\n  return part.toLowerCase() === 'distill';\n}\n\nfunction _hasMixedCase(part:string):boolean {\n  const lower = part.toLowerCase(), upper = part.toUpperCase();\n  return (part !== lower && part !== upper);\n}\n\nfunction _toInitialCap(part:string):string {\n  /* v8 ignore next */\n  assert(part.length > 0);\n  return part[0].toUpperCase() + part.slice(1).toLowerCase();\n}\n\nfunction _normalizeFamilyName(part:string):string {\n  if (_hasMixedCase(part)) return part; // Since the model ID is trying to accomplish something with case, I'll preserve it.\n  return _toInitialCap(part);\n}\n\nfunction _normalizeSize(part:string):string {\n  if (part.toLowerCase() === 'mini') return 'Mini';\n  return part.toUpperCase();\n}\n\nexport function nicknameModelId(modelId:string, otherNicknames:string[] = []):string {\n  let familyName = '', size = '', distillName = '';\n  const parts = modelId.split('-');\n  familyName = _normalizeFamilyName(parts[0].trim());\n  for(let partI = 1; partI < parts.length; ++partI) {\n    const part = parts[partI].trim();\n    if (_isSizePart(part)) size = _normalizeSize(part);\n    if (_isDistillPart(part) && partI < parts.length-1) distillName = _normalizeFamilyName(parts[partI+1].trim());\n  }\n  let nickname = (distillName.length) \n    ? `${distillName} < ${familyName} ${size}`.trim()\n    : `${familyName} ${size}`.trim();\n\n  const nicknameNumber = otherNicknames.filter(n => n === nickname || n.startsWith(`${nickname} #`)).length;\n  if (nicknameNumber > 0) nickname += ` #${nicknameNumber + 1}`;\n  return nickname;\n}","import MovingAverageData from \"./types/MovingAverageData\";\n\nexport function createMovingAverage(seriesMax:number):MovingAverageData {\n  return { series:[], seriesMax, lastAverage:0 };\n}\n\nexport function updateMovingAverage(nextValue:number, movingAverageData:MovingAverageData):number {\n  const { series, seriesMax } = movingAverageData;\n  series.push(nextValue);\n  if (series.length > seriesMax) series.shift();\n  const sum = series.reduce((acc, val) => acc + val, 0);\n  movingAverageData.lastAverage = sum / series.length;\n  return movingAverageData.lastAverage;\n}","enum ModelDeviceProblemType { \n  INSUFFICIENT_VRAM, \n  INSUFFICIENT_STORAGE, \n  BAD_LOAD_SUCCESS_HISTORY, \n  BAD_PERFORMANCE_HISTORY,\n  DEVELOPER_MODE,\n  WEBGPU_NOT_AVAILABLE,\n  BETA\n}\n\nexport default ModelDeviceProblemType;","import { hasStorageSupport } from \"./featureUtil\";\n\nexport async function estimateAvailableStorage() {\n  /* v8 ignore start */\n  if (!hasStorageSupport()) return 0;\n  const estimate = await navigator.storage.estimate();\n  if (!estimate || estimate.quota === undefined || estimate.usage === undefined) return 0;\n  \n  const quota = estimate.quota;\n  const usage = estimate.usage;\n  return quota - usage;\n  /* v8 ignore end */\n}","/* v8 ignore start */\nexport function hasWebGpuSupport():boolean {\n  if (!globalThis.navigator || !globalThis.navigator.gpu) return false; // Test runner.\n  return !!globalThis.navigator.gpu;\n}\n\nexport function hasWasmSupport():boolean {\n  return !!globalThis.WebAssembly\n}\n\nexport function hasStorageSupport():boolean {\n  if (!globalThis.navigator || !globalThis.navigator.gpu) return false; // Test runner.\n  return (!!globalThis.navigator.storage && !!globalThis.navigator.storage.estimate);\n}\n/* v8 ignore end */","type MovingAverageData = {\n  series: number[],\n  seriesMax: number,\n  lastAverage: number\n}\n\nexport function isMovingAverageDataFormat(obj:any):boolean {\n  return obj &&\n    Array.isArray(obj.series) &&\n    typeof obj.seriesMax === 'number' &&\n    typeof obj.lastAverage === 'number' &&\n    obj.series.every((val:any) => typeof val === 'number');\n}\n\nexport default MovingAverageData;","import ModelDeviceHistory, { isModelDeviceHistoryFormat } from \"@/models/types/ModelDeviceHistory\";\nimport { getText, setText } from \"./pathStore\";\nimport { createMovingAverage } from \"@/common/movingAverageUtil\";\n\nexport const LOAD_SUCCESS_RATE_SAMPLE_COUNT = 4;\nexport const LOAD_TIME_SAMPLE_COUNT = 4;\nexport const INPUT_TOKENS_SAMPLE_COUNT = 20;\nexport const OUTPUT_TOKENS_SAMPLE_COUNT = 20;\n\nfunction _modelIdToKey(modelId:String):string {\n  return `/deviceHistory/models/${modelId}.json`;\n}\n\nfunction _createModelDeviceHistory():ModelDeviceHistory {\n  return { \n    loadSuccessRate: createMovingAverage(LOAD_SUCCESS_RATE_SAMPLE_COUNT),\n    loadTime: createMovingAverage(LOAD_TIME_SAMPLE_COUNT),\n    inputCharsPerSec: createMovingAverage(INPUT_TOKENS_SAMPLE_COUNT),\n    outputCharsPerSec: createMovingAverage(OUTPUT_TOKENS_SAMPLE_COUNT)\n  };\n}\n\nexport async function getModelDeviceHistory(modelId:string):Promise<ModelDeviceHistory> {\n  const key = _modelIdToKey(modelId);\n  const json = await getText(key);\n  if (!json) return _createModelDeviceHistory();\n  try {\n    const history:ModelDeviceHistory = JSON.parse(json);\n    if (!isModelDeviceHistoryFormat(history)) {\n      console.error(`Model device history for model ${modelId} is not in the expected format. Reinitializing history.`);\n      return _createModelDeviceHistory();\n    }\n    return history;\n  } catch (e) {\n    console.error(`Failed to parse model device history for model ${modelId}:`, e);\n    return _createModelDeviceHistory();\n  }\n}\n\nexport async function setModelDeviceHistory(modelId:string, history:ModelDeviceHistory):Promise<void> {\n  const key = _modelIdToKey(modelId);\n  const json = JSON.stringify(history);\n  await setText(key, json);\n}","import MovingAverageData, { isMovingAverageDataFormat } from '../../common/types/MovingAverageData';\n\ntype ModelDeviceHistory = {\n  loadSuccessRate:MovingAverageData,\n  loadTime:MovingAverageData,\n  inputCharsPerSec:MovingAverageData,\n  outputCharsPerSec:MovingAverageData\n}\n\nexport function isModelDeviceHistoryFormat(obj:any):boolean {\n  return obj && \n    isMovingAverageDataFormat(obj.loadSuccessRate) &&\n    isMovingAverageDataFormat(obj.loadTime) &&\n    isMovingAverageDataFormat(obj.inputCharsPerSec) &&\n    isMovingAverageDataFormat(obj.outputCharsPerSec);\n}\n\nexport default ModelDeviceHistory;","export const KILOBYTE = 1024;\nexport const MEGABYTE = KILOBYTE * 1024;\nexport const GIGABYTE = MEGABYTE * 1024;\n\nexport function byteCountToKb(byteCount:number, decimalPlaces:number = 1):number {\n  return Math.round((byteCount / KILOBYTE) * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);\n}\n\nexport function byteCountToMb(byteCount:number, decimalPlaces:number = 1):number {\n  return Math.round((byteCount / MEGABYTE) * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);\n}\n\nexport function byteCountToGb(byteCount:number, decimalPlaces:number = 1):number {\n  return Math.round((byteCount / GIGABYTE) * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);\n}\n\nexport function bytesPerMsecToGbPerSec(bytesPerMs:number, decimalPlaces:number = 1):number {\n  return Math.round((bytesPerMs * 1000 / GIGABYTE) * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);\n}\n\nexport function mbToGb(mb:number, decimalPlaces:number = 1):number {\n  return Math.round((mb / 1024) * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);\n}\n\nexport function formatByteCount(byteCount:number):string {\n  if (byteCount < KILOBYTE) return `${Math.round(byteCount)} B`;\n  else if (byteCount < MEGABYTE) return `${byteCountToKb(byteCount)} KB`;\n  else if (byteCount < GIGABYTE) return `${byteCountToMb(byteCount)} MB`;\n  else return `${byteCountToGb(byteCount)} GB`;\n}\n\n/* v8 ignore start */\nexport function estimateSystemMemory():number {\n  if (globalThis.navigator && 'deviceMemory' in navigator) return (navigator as any).deviceMemory;\n  if ('memory' in performance) return Math.floor((performance as any).memory.jsHeapSizeLimit / GIGABYTE);\n  return 0;\n}\n/* v8 ignore end */","import { getCategorySettings, setCategorySettings } from \"@/persistence/settings\";\nimport SettingCategory from \"../types/SettingCategory\";\nimport SettingType from \"../types/SettingType\";\nimport { mergeSettingValuesIntoCategory, settingsToSettingValues } from \"./settingCategoryUtil\";\nimport { estimateSystemMemory, GIGABYTE } from \"@/deviceCapabilities/memoryUtil\";\nimport { assertNonNullable } from \"@/common/assertUtil\";\nimport SettingValues from \"../types/SettingValues\";\n\nexport const LLM_CATEGORY_ID = \"llm\";\nexport const LLM_SETTING_MAX_SIZE = \"llmMaxSize\";\nexport const LLM_SETTING_AUTO_INC_MAX_SIZE = \"autoIncMaxSize\";\n\n/*\n  The system memory has nothing to do with GPU memory... sorta. Due to web API limitations, I can't directly query GPU memory available.\n  So we won't really know how much GPU memory is available until we successfully allocate. I'm saying \"GPU memory\" instead of \"video memory\", \n  because WebGPU can allocate beyond video memory on devices with unified memory architecture (Macs). There is a danger of system \n  instability (hangs, hard reboots) by overallocating on unified memory devices. Browser code can crash the O/S. So by choosing a number \n  based on available memory as reported by the browser, I can stop allocation beyond the point where system stability becomes a risk.\n\n  Where does 8gb AT_LEAST_THIS_MUCH magic number come from? It's to allow a device to try loading some smaller models, as a unified memory\n  architecture is very unlikely to crash in this range. This number is very much coupled to the hardware expectations of 2025, and is likely\n  to need updating later.\n*/\nfunction _getDefaultMaxLlmSize():number {\n  const AT_LEAST_THIS_MUCH = 8;\n  const availableMemory = estimateSystemMemory();\n  const availableMemoryGB = Math.round(availableMemory / GIGABYTE);\n  return Math.max(AT_LEAST_THIS_MUCH, availableMemoryGB);\n}\n\nfunction _getLlmDefaultSettings():SettingCategory {\n  return {\n    name: \"LLM\",\n    id: LLM_CATEGORY_ID,\n    description: \"Settings for loading and using LLMs (Large Language Models) on this device.\",\n    settings: [\n      {type: SettingType.NUMERIC, id:LLM_SETTING_MAX_SIZE, label:\"Max LLM size (GB)\", value:_getDefaultMaxLlmSize(), minValue:1, maxValue:256},\n      {type: SettingType.BOOLEAN_TOGGLE, id:LLM_SETTING_AUTO_INC_MAX_SIZE, label:\"Auto-increase max LLM\", value:true}\n    ],\n    headings: [\n      {precedeSettingId:'llmMaxSize', description:`The max LLM size prevents attempting to load models that are unlikely to succeed and could cause system instability. The auto-increment option will increase the max LLM size if evidence is found during loading to support a larger size.`}\n    ]\n  };\n}\n\nexport async function loadLlmSettingCategory():Promise<SettingCategory> {\n  const settingValues = await getCategorySettings(LLM_CATEGORY_ID) ?? {};\n  return mergeSettingValuesIntoCategory(_getLlmDefaultSettings(), settingValues);\n}\n\nexport async function applyLlmSettings(_settingValues:SettingValues):Promise<void> {\n  // Currently, no specific actions are needed to apply LLM settings.\n  // This function is a placeholder for future logic if needed.\n  // For now, it simply returns without doing anything.\n  return Promise.resolve();\n}\n\nexport async function incrementMaxLlmSizeAfterSuccessfulLoad(successfulLoadSize:number) {\n  const llmCategory = await loadLlmSettingCategory();\n  const settingValues = settingsToSettingValues(llmCategory.settings);\n  const isAutoIncrementing = settingValues[LLM_SETTING_AUTO_INC_MAX_SIZE] as boolean;\n  if (!isAutoIncrementing) return;\n  const currentMaxSize = settingValues[LLM_SETTING_MAX_SIZE] as number;\n  /* v8 ignore next */\n  assertNonNullable(currentMaxSize); // The default settings at least should always have this setting.\n  if (currentMaxSize >= successfulLoadSize) return;\n  settingValues[LLM_SETTING_MAX_SIZE] = Math.ceil(successfulLoadSize); // Round up to nearest GB because setting is whole numbers only. Rounding down would cause this model to be treated pessimistically when loading later.\n  setCategorySettings(LLM_CATEGORY_ID, settingValues);\n}\n\nexport async function getMaxLlmSize():Promise<number> {\n  const settingValues = await getCategorySettings(LLM_CATEGORY_ID);\n  if (!settingValues) return _getDefaultMaxLlmSize();\n  const maxSize = settingValues[LLM_SETTING_MAX_SIZE];\n  if (!maxSize) return _getDefaultMaxLlmSize();\n  return maxSize as number;\n}","import { assertNonNullable } from \"@/common/assertUtil\";\nimport { fetchAppMetadataText } from \"./fetchAppMetaData\";\nimport AppMetaData, { isAppMetaDataFormat } from \"./types/AppMetaData\";\n\n// Only need to load the app metadata once per session, so cache it.\nlet theAppMetaData:AppMetaData|null = null;\n\n// For testing purposes.\nexport function clearAppMetaDataCache():void {\n  theAppMetaData = null;\n}\n\n// Convenience function - assumes loaded to avoid async handling.\nexport function getAppId():string {\n  if (!theAppMetaData) throw new Error('App metadata not initialized yet.');\n  return theAppMetaData.id;\n}\n\n// Convenience function - assumes loaded to avoid async handling.\nexport function getAppName():string {\n  if (!theAppMetaData) throw new Error('App metadata not initialized yet.');\n  return theAppMetaData.name;\n}\n\nexport async function initAppMetaData():Promise<void> {\n  if (theAppMetaData) return; // Already initialized.\n  let json:string = '';\n  try {\n    json = await fetchAppMetadataText();\n  } catch(e) {\n    console.error('Could not fetch app-metadata.json from server. Add this file to your /public or web-serving directory to fix.');\n    throw new Error(`Failed to fetch app metadata: ` + e);\n  }\n  let appMetaData:AppMetaData;\n  try {\n    appMetaData = JSON.parse(json);\n  } catch (e) { // A parse error is more likely due to the server returning a 404 or default HTML.\n    console.error('Server returned invalid JSON for app-metadata.json, which probably indicates a missing file. Add this file to your /public or web-serving directory to fix.');\n    throw new Error(`Failed to parse app metadata JSON: ` + e);\n  }\n  if (!isAppMetaDataFormat(appMetaData)) throw new Error('Invalid app metadata format in app-metadata.json.');\n  theAppMetaData = appMetaData;\n}\n\nexport async function getAppMetaData():Promise<AppMetaData> {\n  if (!theAppMetaData) await initAppMetaData();\n  assertNonNullable(theAppMetaData);\n  return theAppMetaData;\n}","import { getBaseUrl } from \"@/components/decentBar/decentBarUtil\";\n\n// Put function in this module to allow for mocking in tests.\n/* v8 ignore start */\nexport async function fetchAppMetadataText():Promise<string> {\n  const baseUrl = getBaseUrl();\n  const appMetaDataUrl = `${baseUrl}/app-metadata.json`;\n  const response = await fetch(appMetaDataUrl);\n  if (!response.ok) throw new Error(`Failed to fetch app metadata from ${appMetaDataUrl}: ${response.status} ${response.statusText}`);\n  return await response.text();\n}\n/* v8 ignore end */","import SupportedModel, { isSupportedModelFormat } from \"./SupportedModel\";\n\ntype AppMetaData = {\n  id:string;                        // Unique identifier for the app.\n  name:string;                      // Display name of the app.\n  description:string;               // Description of the app.\n  supportedModels:SupportedModel[]; // Array of models supported by the app.\n};\n\nexport function isAppMetaDataFormat(maybeAppMetaData:any): boolean {\n  if (!maybeAppMetaData || typeof maybeAppMetaData !== 'object') return false;\n  if (typeof maybeAppMetaData.id !== 'string') return false;\n  if (typeof maybeAppMetaData.name !== 'string') return false;\n  if (typeof maybeAppMetaData.description !== 'string') return false;\n  if (!Array.isArray(maybeAppMetaData.supportedModels)) return false;\n  return maybeAppMetaData.supportedModels.every(isSupportedModelFormat);\n}\n\nexport default AppMetaData;","import ModelInfo from \"./types/ModelInfo\";\nimport { updateMovingAverage } from \"@/common/movingAverageUtil\";\nimport ModelDeviceProblem from \"./types/ModelDeviceProblem\";\nimport ModelDeviceProblemType from \"./types/ModelDeviceProblemType\";\nimport { estimateAvailableStorage } from \"@/deviceCapabilities/storageUtil\";\nimport { getModelDeviceHistory, setModelDeviceHistory } from \"@/persistence/deviceHistory\";\nimport { assert, assertNonNullable } from \"@/common/assertUtil\";\nimport MovingAverageData from \"@/common/types/MovingAverageData\";\nimport { isServingLocally } from \"@/developer/devEnvUtil\";\nimport theModelList from './modelList.json';\nimport { getMaxLlmSize, incrementMaxLlmSizeAfterSuccessfulLoad } from \"@/settings/categories/llmSettingsUtil\";\nimport { mbToGb } from \"@/deviceCapabilities/memoryUtil\";\nimport { hasWebGpuSupport } from \"@/deviceCapabilities/featureUtil\";\nimport { APP_SETTINGS_LLM_ID, getAppSettings } from \"@/settings/categories/appSettingsUtil\";\nimport { AUTO_SELECT_ID } from \"@/settings/settingsDialog/setters/interactions/models\";\nimport { getAppMetaData } from \"@/appMetadata/appMetadataUtil\";\n\nlet theCurrentModelInfo:ModelInfo|null = null;\n\nfunction _findModelRequiredMemory(modelId:string):number {\n  const model = (theModelList as any)[modelId];\n  if (!model || !model.vramRequiredMb) return 0;\n  return mbToGb(model.vramRequiredMb);\n}\n\nconst WEBLLM_MEMORY_TO_STORAGE_RATIO = 3; // Could improve this number with testing.\nasync function _setCurrentModel(modelId:string) {\n  if (theCurrentModelInfo?.modelId === modelId) return;\n  const history = await getModelDeviceHistory(modelId);\n  const requiredMemoryGb = _findModelRequiredMemory(modelId);\n  if (!requiredMemoryGb) throw new Error(`Model ${modelId} not found or has no required memory.`);\n  const requiredStorageGb = requiredMemoryGb * WEBLLM_MEMORY_TO_STORAGE_RATIO;\n  theCurrentModelInfo = { modelId, history, requiredMemoryGb, requiredStorageGb};\n}\n\nasync function _saveCurrentModel() {\n  assertNonNullable(theCurrentModelInfo);\n  await setModelDeviceHistory(theCurrentModelInfo.modelId, theCurrentModelInfo.history);\n}\n\nfunction _describeBadLoadSuccessHistory(loadSuccessRate:MovingAverageData):string {\n    const attemptCount = loadSuccessRate.series.length;\n    const failCount = loadSuccessRate.series.filter(s => s === 0).length;\n    if (attemptCount === failCount) {\n      if (attemptCount === 1) return `Your last attempt to load this model failed.`;\n      if (attemptCount < loadSuccessRate.seriesMax) return `All ${attemptCount} of your attempts to load this model failed.`;\n      return `All of the last ${attemptCount} attempts to load this model failed.`;  \n    }\n\n    const didlastLoadFail = loadSuccessRate.series[loadSuccessRate.series.length - 1] === 0;\n    const successCount = attemptCount - failCount;\n    if (didlastLoadFail) return `This model loaded successfully ${successCount} in ${attemptCount} tries, with the last attempt failing.`;\n    return `This model loaded successfully ${successCount} in ${attemptCount} tries.`;\n}\n\nconst SLOW_INPUT_TOKEN_THRESHOLD = 6, SLOW_OUTPUT_TOKEN_THRESHOLD = 3;\nfunction _areTokenRatesSlow(inputTokensPerSec:MovingAverageData, outputTokensPerSec:MovingAverageData):boolean {\n  return ((inputTokensPerSec.series.length > 0 && inputTokensPerSec.lastAverage < SLOW_INPUT_TOKEN_THRESHOLD) ||\n    (outputTokensPerSec.series.length > 0 && outputTokensPerSec.lastAverage < SLOW_OUTPUT_TOKEN_THRESHOLD));\n}\n\nfunction _describeBadPerformanceHistory(inputTokensPerSec:MovingAverageData, outputTokensPerSec:MovingAverageData):string {\n  const inputRate = inputTokensPerSec.lastAverage.toFixed(1);\n  const outputRate = outputTokensPerSec.lastAverage.toFixed(1);\n  const inputRateDesc = inputTokensPerSec.series.length ? `Predicted input token rate is ${inputRate} tokens/sec.` : `Can't predict input token rate.`;\n  const outputRateDesc = outputTokensPerSec.series.length ? `Predicted output token rate is ${outputRate} tokens/sec.` : `Can't predict output token rate.`;\n  return `This model's performance might be too slow. ${inputRateDesc} ${outputRateDesc}`;\n}\n\nfunction _describeInsufficientStorage(wasSuccessfulBefore:boolean, requiredStorageGb:number, availableStorage:number):string {\n  if (availableStorage === 0) {\n    if (wasSuccessfulBefore) return `Couldn't determine how much storage is available on the device. But you had previous success loading this model.`;\n    return `Couldn't determine how much storage is available on the device. There might not be enough to load the model.`;\n  }\n  // Round to fixed 1 place\n  const neededStorage = (requiredStorageGb - availableStorage).toFixed(1);\n  if (wasSuccessfulBefore) return `Although you were successful loading this model previously, you might need an additional ${neededStorage} GB of free storage space on this device to load it safely.`\n  return `You probably need an additional ${neededStorage} GB of free storage space on this device to load this model safely.`;\n}\n\nfunction _describeInsufficientMemory(wasSuccessfulBefore:boolean, requiredMemoryGb:number, maxLlmSize:number):string {\n  if (maxLlmSize == 0) {\n    if (wasSuccessfulBefore) return `Couldn't determine how much memory is available on the device. But you did have previous success loading this model.`;\n    return `Couldn't determine how much memory is available on the device. There might not be enough to load the model.`;\n  }\n  if (wasSuccessfulBefore) return `It looks like you may not have enough video memory. But you did have previous success loading this model.`;\n  return `You need ${requiredMemoryGb.toFixed(1)} GB of video memory to load this model. It seems unlikely to load, but you can try it.`;\n}\n\nexport function _describeWebGpuNotAvailable():string {\n  return `Your browser doesn't support WebGPU. GPU-accelerated models won't load successfully. You could try using a different browser like Google Chrome or Microsoft Edge.`;\n}\n\n// Used for testing.\nexport async function clearCachedModelInfo() {\n  theCurrentModelInfo = null;\n}\n\nfunction _calculatePerformance(requestTimestamp:number, firstResponseTimestamp:number, lastResponseTimestamp:number, \n    inputCharCount:number, outputCharCount:number):{inputCharsPerSec:number, outputCharsPerSec:number} {\n  const inputTime = firstResponseTimestamp - requestTimestamp;\n  const inputCharsPerSec = inputTime === 0 ? 0 : inputCharCount / inputTime * 1000;\n  const outputTime = lastResponseTimestamp - firstResponseTimestamp;\n  const outputCharsPerSec = outputTime === 0 ? 0 : outputCharCount / outputTime * 1000;\n  return {inputCharsPerSec, outputCharsPerSec};\n}\n\nexport async function updateModelDevicePerformanceHistory(modelId:string, requestTime:number, firstResponseTime:number, lastResponseTime:number, \n    inputCharCount:number, outputCharCount:number) {\n  const {inputCharsPerSec, outputCharsPerSec} = _calculatePerformance(requestTime, firstResponseTime, lastResponseTime, inputCharCount, outputCharCount);\n  if (inputCharsPerSec === 0 && outputCharsPerSec === 0) return; // I don't trust these values, so don't update history.\n  await _setCurrentModel(modelId);\n  assertNonNullable(theCurrentModelInfo);\n  if (inputCharsPerSec) updateMovingAverage(inputCharsPerSec, theCurrentModelInfo.history.inputCharsPerSec);\n  if (outputCharsPerSec) updateMovingAverage(outputCharsPerSec, theCurrentModelInfo.history.outputCharsPerSec);\n  await _saveCurrentModel();\n}\n\nexport async function updateModelDeviceLoadHistory(modelId:string, successfulLoad:boolean, loadTime:number = 0) {\n  await _setCurrentModel(modelId);\n  assertNonNullable(theCurrentModelInfo);\n  const loadSuccessRate = successfulLoad ? 1 : 0;\n  updateMovingAverage(loadSuccessRate, theCurrentModelInfo.history.loadSuccessRate);\n  if (successfulLoad) {\n    updateMovingAverage(loadTime, theCurrentModelInfo.history.loadTime);\n    await incrementMaxLlmSizeAfterSuccessfulLoad(theCurrentModelInfo.requiredMemoryGb);\n  }\n  await _saveCurrentModel();\n}\n\nexport async function predictModelDeviceProblems(modelId:string):Promise<ModelDeviceProblem[]|null> {\n  await _setCurrentModel(modelId);\n  assertNonNullable(theCurrentModelInfo);\n\n  const problems:ModelDeviceProblem[] = [];\n\n  if (!hasWebGpuSupport()) {\n    problems.push({\n      type: ModelDeviceProblemType.WEBGPU_NOT_AVAILABLE,\n      description: _describeWebGpuNotAvailable(),\n      isBlocking: true\n    });\n  }\n\n  const { loadSuccessRate } = theCurrentModelInfo.history;\n  if (loadSuccessRate.series.length && loadSuccessRate.lastAverage < 1) {\n    problems.push({\n      type: ModelDeviceProblemType.BAD_LOAD_SUCCESS_HISTORY,\n      description: _describeBadLoadSuccessHistory(loadSuccessRate),\n      isBlocking: false\n    });\n  }\n\n  const { inputCharsPerSec, outputCharsPerSec } = theCurrentModelInfo.history;\n  if (_areTokenRatesSlow(inputCharsPerSec, outputCharsPerSec)) {\n    problems.push({\n      type: ModelDeviceProblemType.BAD_PERFORMANCE_HISTORY,\n      description: _describeBadPerformanceHistory(inputCharsPerSec, outputCharsPerSec),\n      isBlocking: false\n    })\n  }\n\n  const maxLlmSize = await getMaxLlmSize();\n  const wasSuccessfulBefore = loadSuccessRate.series.some(s => s > 0);\n  if (theCurrentModelInfo.requiredMemoryGb > maxLlmSize) {\n    problems.push({\n      type: ModelDeviceProblemType.INSUFFICIENT_VRAM, \n      description: _describeInsufficientMemory(wasSuccessfulBefore, theCurrentModelInfo.requiredMemoryGb, maxLlmSize),\n      isBlocking: false\n    });\n  }\n\n  const availableStorage = await estimateAvailableStorage();\n  if (theCurrentModelInfo.requiredStorageGb > await estimateAvailableStorage()) {\n    problems.push({\n      type: ModelDeviceProblemType.INSUFFICIENT_STORAGE,\n      description: _describeInsufficientStorage(wasSuccessfulBefore, theCurrentModelInfo.requiredStorageGb, availableStorage),\n      isBlocking: false\n    });\n  }\n\n  if (isServingLocally()) {\n    problems.push({\n      type: ModelDeviceProblemType.DEVELOPER_MODE,\n      description: `You are running this web app from a local server, probably for development.`,\n      isBlocking: false\n    });\n  }\n  \n  return problems.length ? problems : null;\n}\n\nexport async function scoreModel(modelId:string, isBetaModel:boolean):Promise<number> {\n  let problems = await predictModelDeviceProblems(modelId) ?? [];\n  assertNonNullable(theCurrentModelInfo); // Side effect of calling predictModelDeviceProblems() is setting theCurrentModelInfo.\n  assert(theCurrentModelInfo.modelId === modelId);\n  problems = problems.filter(p => p.type !== ModelDeviceProblemType.DEVELOPER_MODE);\n  \n  const loadCount = theCurrentModelInfo.history.loadSuccessRate.series.length;\n  if (!problems.length && !isBetaModel) {  \n    if (!loadCount) return 50; // No problems, but no load history either.\n    assert(theCurrentModelInfo.history.loadSuccessRate.lastAverage === 1); // No problems means that all past loads were successful.\n    if (loadCount === 1) return 60; \n    if (loadCount < 3) return 75;\n    return 100; // 3+ successful loads, so very likely to load again. To avoid always favoring the most-frequently-used models, cap at 3 loads contributing to the score.\n  }\n\n  // Any blocking problems gives the lowest possible score.\n  if (problems.some(p => p.isBlocking)) return 0;\n\n  // Start score at 40 and subtract penalties for different problems.\n  let score = 40;\n\n  if (!loadCount) { // If no load history at all, subtract 5 points.\n    score -= 5;\n  } else { // Otherwise subtract up to 10 points based on ratio of success.\n    score -= Math.round(10 * (1 - theCurrentModelInfo.history.loadSuccessRate.lastAverage));\n  }\n\n  // If video memory issues subtract 10.\n  if (problems.some(p => p.type === ModelDeviceProblemType.INSUFFICIENT_VRAM)) score -= 10;\n\n  // If persistent storage issues subtract 5. Note user can correct this before loading.\n  if (problems.some(p => p.type === ModelDeviceProblemType.INSUFFICIENT_STORAGE)) score -= 5;\n  \n  // If performance issues subtract 5.\n  if (problems.some(p => p.type === ModelDeviceProblemType.BAD_PERFORMANCE_HISTORY)) score -= 5;\n\n  // If beta model subtract 5.\n  if (isBetaModel) score -= 5;\n\n  assert(score > 0);\n  return score;\n}\n\nexport async function findBestModel():Promise<string> {\n  const { supportedModels } = await getAppMetaData();\n  if (!supportedModels.length) throw Error('No supported LLM models for this app.');\n\n  // First check for a settings-specified model.\n  const appSettingValues = await getAppSettings();\n  let settingsModelId:string = AUTO_SELECT_ID;\n  if (appSettingValues) { \n    const modelId = appSettingValues[APP_SETTINGS_LLM_ID];\n    if (typeof modelId === 'string') settingsModelId = modelId;\n  }\n  if (settingsModelId !== AUTO_SELECT_ID && supportedModels.some(s => s.id === settingsModelId)) return settingsModelId;\n\n  // Next score each supported model as a candidate. Supported models are expected to be sorted by preference according to \n  // to app developer's designation within the appMetadata.json file, so tiebreakers favor earlier models in the list.\n  let bestScore = -1, bestI = -1;\n  for(let modelI = 0; modelI < supportedModels.length; ++modelI) {\n    const model = supportedModels[modelI];\n    const score = await scoreModel(model.id, !!model.beta);\n    if (score > bestScore) {\n      bestScore = score;\n      bestI = modelI;\n    }\n  }\n\n  // Return best scored model.\n  assert(bestI >= 0);\n  return supportedModels[bestI].id;\n}","/* v8 ignore start */\nfunction isIpAddress(hostName:string):boolean {\n  return hostName.match(/^\\d+\\.\\d+\\.\\d+\\.\\d+$/g) !== null;\n}\n\nexport function isServingLocally() {\n  const hostName = window.location.hostname;\n  return hostName === \"localhost\" || isIpAddress(hostName);\n}\n/* v8 ignore end */","import SupportedModel from \"@/appMetadata/types/SupportedModel\";\nimport { nicknameModelId } from \"@/models/modelIdUtil\";\nimport { predictModelDeviceProblems } from \"@/models/modelUtil\";\nimport ModelDeviceHistory from \"@/models/types/ModelDeviceHistory\";\nimport ModelDeviceProblem from \"@/models/types/ModelDeviceProblem\"\nimport ModelDeviceProblemType from \"@/models/types/ModelDeviceProblemType\";\nimport { getModelDeviceHistory } from \"@/persistence/deviceHistory\";\n\nexport type ModelOption = {\n  id:string,\n  originalIndex:number,\n  beta:boolean,\n  iconChar:string|null,\n  displayName:string,\n  appBehaviorSummary:string,\n  problems:ModelDeviceProblem[]|null,\n  inputCharsPerSec:number,\n  outputCharsPerSec:number\n}\n\nexport const AUTO_SELECT_ID = 'auto-select'; // Special model ID for auto-select option\n\nconst AUTO_SELECT_OPTION:ModelOption = {\n  id: AUTO_SELECT_ID,\n  originalIndex: -1,\n  displayName: 'Auto Select',\n  problems: null,\n  inputCharsPerSec: 0,\n  outputCharsPerSec: 0,\n  appBehaviorSummary: 'Automatically select the best model for your device and this app.',\n  beta: false,\n  iconChar: null\n}\n\n// Sort beta models to the end, while otherwise preserving the original order.\nfunction _sortModelOptions(options:ModelOption[]):ModelOption[] {\n  return options.sort((a, b) => {\n    if (a.beta && !b.beta) return 1;\n    if (!a.beta && b.beta) return -1;\n    return a.originalIndex - b.originalIndex;\n  });\n}\n\nexport async function initModelOptions(models:SupportedModel[], setModelOptions:Function) {\n  // Quickly set display names.\n  const modelNicknames:string[] = [];\n  const modelOptions:ModelOption[] = models.map((model:SupportedModel, originalIndex:number) => {\n    const { id, beta, appBehaviorSummary } = model;\n    let displayName = nicknameModelId(id, modelNicknames);\n    modelNicknames.push(displayName);\n    return { id, originalIndex, displayName, problems:null, inputCharsPerSec:0, outputCharsPerSec:0, \n      beta:!!beta, iconChar:null, appBehaviorSummary }\n  });\n  const sortedModelOptions = _sortModelOptions(modelOptions);\n  sortedModelOptions.unshift(AUTO_SELECT_OPTION);\n  setModelOptions(modelOptions);\n\n  // Asynchronously update to show problems and performance history.\n  const PROBLEM_ICON = '⚠', AFTER_AUTO_SELECT = 1;\n  const secondModelOptions = [...sortedModelOptions];\n  for(let optionI = AFTER_AUTO_SELECT; optionI < secondModelOptions.length; ++optionI) {\n    const option = secondModelOptions[optionI];\n    option.problems = await predictModelDeviceProblems(option.id) ?? [];\n    if (option.problems.length) option.problems = option.problems.filter(o => o.type !== ModelDeviceProblemType.DEVELOPER_MODE);\n    if (option.beta) option.problems.push({ type: ModelDeviceProblemType.BETA, description: 'Beta status: app has not been fully tested with this model.', isBlocking:false });\n    if (!option.problems.length) option.problems = null;\n    option.iconChar = option.problems ? PROBLEM_ICON : null;\n    const history:ModelDeviceHistory = await getModelDeviceHistory(option.id);\n    if (history.inputCharsPerSec.series.length) option.inputCharsPerSec = history.inputCharsPerSec.lastAverage;\n    if (history.outputCharsPerSec.series.length) option.outputCharsPerSec = history.outputCharsPerSec.lastAverage;\n  };\n  setModelOptions(secondModelOptions);\n}","import { getCategorySettings } from \"../../persistence/settings\";\nimport Setting from \"../../settings/types/Setting\";\nimport { mergeSettingValuesIntoCategory, settingsToSettingValues } from \"./settingCategoryUtil\";\nimport { LoadAppSettingsCallback } from \"../types/AppSettingsCallbacks\";\nimport SettingCategory from \"../types/SettingCategory\";\nimport AppSettingCategory from \"../types/AppSettingCategory\";\nimport { windowLocationPathname } from \"../../common/windowUtil\";\nimport SettingType from \"../types/SettingType\";\nimport { AUTO_SELECT_ID } from \"../settingsDialog/setters/interactions/models\";\nimport { getAppMetaData } from \"@/appMetadata/appMetadataUtil\";\nimport Heading from \"../types/Heading\";\nimport SettingValues from \"../types/SettingValues\";\n\n// Without the app ID appended, this category ID can only be used for operations that need to do \n// something specifying the app category, but not a specific app. For example, saving settings to persistent \n// storage needs the app name appended, but opening the dialog with app settings category selected does not.\nexport const APP_CATEGORY_ID = 'app-';\nexport const APP_SETTINGS_LLM_ID = 'llm';\n\nexport function getAppCategoryId(appId:string):string {\n  const parts = windowLocationPathname().split('/').filter(part => part.length);\n  if (!parts.length) return `${APP_CATEGORY_ID}${appId}`;\n  return `${APP_CATEGORY_ID}${parts[0]}`;\n}\n\nasync function _addAppLlmSettingIfMissing(settings:Setting[]) {\n  if (settings.some(s => s.id === APP_SETTINGS_LLM_ID)) return;\n  const appMetaData = await getAppMetaData();\n  settings.unshift({\n    id: APP_SETTINGS_LLM_ID,\n    type: SettingType.SUPPORTED_MODEL,\n    label: 'LLM to use',\n    value: AUTO_SELECT_ID,\n    models: appMetaData.supportedModels\n  });\n}\n\nfunction _addAppLlmHeadingIfMissing(headings:Heading[]) {\n  if (headings.some(h => h.precedeSettingId === APP_SETTINGS_LLM_ID)) return;\n  headings.unshift({\n    id: 'LLM',\n    description: 'LLM Settings Specific to This App',\n    precedeSettingId: APP_SETTINGS_LLM_ID\n  });\n}\n\nasync function _appSettingCategoryToSettingCategory(appCategory:AppSettingCategory, appId:string):Promise<SettingCategory> {\n  const settings = [...appCategory.settings];\n  await _addAppLlmSettingIfMissing(settings);\n  const headings = appCategory.headings ? [...appCategory.headings] : []\n  _addAppLlmHeadingIfMissing(headings);\n  return {\n    name: 'This App',\n    id: getAppCategoryId(appId),\n    description: appCategory.description,\n    headings,\n    settings,\n    disablementRules: appCategory.disablementRules\n  }\n}\n\n/**\n * Retrieves application settings.\n * @returns {SettingValues} Associative array of settings.\n */\nexport async function getAppSettings():Promise<SettingValues|null> {\n  const { id:appId } = await getAppMetaData();\n  const id = getAppCategoryId(appId);\n  return await getCategorySettings(id);\n}\n\nexport async function loadAppSettingCategory(defaultAppCategory:AppSettingCategory, onLoadAppSettings?:LoadAppSettingsCallback):Promise<SettingCategory> {\n  const { id:appId } = await getAppMetaData();\n  const category = await _appSettingCategoryToSettingCategory(defaultAppCategory, appId);\n  let appSettings = await getAppSettings() ?? settingsToSettingValues(category.settings);\n  if (onLoadAppSettings) {\n    const overrideAppSettings = onLoadAppSettings(appSettings); // Allow caller to fix/upgrade settings or use their own loading mechanism.\n    if (overrideAppSettings) appSettings = overrideAppSettings;\n  }\n  return mergeSettingValuesIntoCategory(category, appSettings);\n}","// Putting these in separate module makes them mockable in tests.\n\n/* v8 ignore start */\nexport function windowLocationPathname() {\n  return window.location.pathname;\n}\n\nexport function browserClientRect():DOMRect {\n  return document.documentElement.getBoundingClientRect()\n}\n/* v8 ignore end */","export enum ToastType {\n  INFO = 'info',\n  IMPORTANT = 'important',\n  ERROR = 'error'\n}\n\nexport enum ToastState {\n  APPEARING,\n  VISIBLE,\n  DISAPPEARING,\n  GONE\n}\n\ntype Toast = {\n  message:string,\n  type:ToastType\n}\n\nexport default Toast;","import ToastManager, {ToastCallback} from \"./ToastManager\";\nimport {ToastType} from \"./Toast\";\n\nconst toastManager = new ToastManager();\n\nexport function infoToast(message:string) {\n  toastManager.sendToast(message, ToastType.INFO);\n}\n\nexport function importantToast(message:string) {\n  toastManager.sendToast(message, ToastType.IMPORTANT);\n}\n\nexport function errorToast(message:string) {\n  toastManager.sendToast(message, ToastType.ERROR);\n}\n\nexport function subscribeToToasts(callback:ToastCallback) {\n  toastManager.subscribe(callback);\n}\n\nexport function unsubscribeFromToasts(callback:ToastCallback) {\n  toastManager.unsubscribe(callback);\n}\n\nexport function doesToastTypeRequireDismissing(type:ToastType):boolean {\n  return type === ToastType.ERROR || type === ToastType.IMPORTANT;\n}","import Toast, { ToastType } from './Toast';\n\nexport type ToastCallback = (toast:Toast) => void;\nclass ToastManager {\n  private _subscriptions:ToastCallback[];\n  \n  constructor() {\n    this._subscriptions = [];\n  }\n  \n  sendToast(message:string, type:ToastType) {\n    const toast:Toast = { message, type };\n    this._subscriptions.forEach(callback => callback(toast));\n  }\n  \n  subscribe(callback:ToastCallback) {\n    if (!this._subscriptions.includes(callback)) this._subscriptions.push(callback);\n  }\n  \n  unsubscribe(callback:ToastCallback) {\n    const index = this._subscriptions.indexOf(callback);\n    if (index !== -1) this._subscriptions.splice(index, 1);\n  }\n}\n\nexport default ToastManager;","// A really trivial function, but useful for testing purposes because it\n// can be mocked to return a fixed value.\n/* v8 ignore start */\nexport function now() {\n  return Date.now();\n}\n/* v8 ignore end */","import { deleteByKey, getAllKeysAtPath, getText, setText } from \"./pathStore\";\n\n// Format day path as YYYY-MM-DD.\nexport function getDayPath(timestamp:number):string {\n  const date = new Date(timestamp);\n  const dayPath = date.getFullYear().toString().padStart(4, '0') + '-' +\n    (date.getMonth() + 1).toString().padStart(2, '0') + '-' +\n    (date.getDate()).toString().padStart(2, '0');\n  return dayPath;\n}\n\nfunction _dayPathToKey(dayPath:string):string {\n  return `/log/${dayPath}.txt`;\n}\n\nfunction _keyToDayPath(key:string):string {\n  if (!key.startsWith('/log/') || !key.endsWith('.txt')) throw Error(`Invalid log key: ${key}`);\n  return key.slice(5, -4); // Remove '/log/' prefix and '.txt' suffix.\n}\n\nexport async function getLogTextForDay(dayPath:string):Promise<string|null> {\n  const key = _dayPathToKey(dayPath);\n  return await getText(key);\n}\n\nexport async function setLogTextForDay(dayPath:string, text:string) {\n  const key = _dayPathToKey(dayPath);\n  await setText(key, text);\n}\n\nexport async function deleteLogTextForDay(dayPath:string) {\n  const key = _dayPathToKey(dayPath);\n  await deleteByKey(key);\n}\n\n// Returns a list of all days containing logs in the format YYYY-MM-DD, sorted chronologically (earlier dates first).\nexport async function findAllLoggedDays():Promise<string[]> {\n  const keys = await getAllKeysAtPath('/log/');\n  return keys.map(_keyToDayPath).sort((a, b) => a.localeCompare(b));\n}","import SettingValues from \"../settings/types/SettingValues\";\nimport { assert, assertNonNullable } from \"../common/assertUtil\";\nimport { now } from \"../common/dateUtil\";\nimport { deleteLogTextForDay, findAllLoggedDays, getDayPath, getLogTextForDay, setLogTextForDay } from \"../persistence/localLog\";\nimport { LOGGING_SETTING_ENABLE, LOGGING_SETTING_MAX_RETENTION_DAYS } from \"../settings/categories/loggingSettingsUtil\";\n\nconst DEFAULT_WRITE_DELAY_MS = 3000;\nconst DAY = 24 * 60 * 60 * 1000;\nconst UNINITIALIZED_DAY_PATH = 'UNINITIALIZED_DAY_PATH';\n\nlet theDayBuffer:string[] = [];\nlet theDayBufferPath:string = UNINITIALIZED_DAY_PATH;\nlet thePreviousDayPath:string = UNINITIALIZED_DAY_PATH;\nlet thePreviousDayEntryCount:number = 0; // When >0, it means the buffer has entries from the previous day that haven't been written yet.\nlet theDebouncedWriteTimer:number|null = null;\nlet theAppName:string = '';\nlet theLoggingSettings:SettingValues|null = null;\nlet theWriteDelayMs:number = DEFAULT_WRITE_DELAY_MS;\n\nfunction _getMaxRetentionDays():number {\n  return (theLoggingSettings && theLoggingSettings[LOGGING_SETTING_MAX_RETENTION_DAYS] as number) || 0;\n}\n\nfunction _isLoggingEnabled():boolean {\n  assertNonNullable(theLoggingSettings);\n  return theLoggingSettings[LOGGING_SETTING_ENABLE] as boolean;\n}\n\nfunction _isRunningOnDedicatedWorker():boolean {\n  /* v8 ignore next */\n  return typeof self !== 'undefined' && self.constructor.name === 'DedicatedWorkerGlobalScope';\n}\n\nasync function _writeDayBuffer() {\n  /* v8 ignore next */\n  assert(theDayBuffer.length > 0);\n  try {\n    assertNonNullable(theDayBufferPath);\n    if (thePreviousDayEntryCount) {\n      assert(thePreviousDayPath !== UNINITIALIZED_DAY_PATH);\n      const previousDayBuffer = theDayBuffer.slice(0, thePreviousDayEntryCount);\n      theDayBuffer = theDayBuffer.slice(thePreviousDayEntryCount); // Keep only the current day's entries in the buffer.\n      await setLogTextForDay(thePreviousDayPath, previousDayBuffer.join('\\n'));\n      thePreviousDayEntryCount = 0;\n      thePreviousDayPath = UNINITIALIZED_DAY_PATH;\n    }\n    await setLogTextForDay(theDayBufferPath, theDayBuffer.join('\\n'));\n  /* v8 ignore start */\n  } catch (error) {\n    console.error('Unexpected error writing log buffer:', error);\n  }\n  /* v8 ignore end */\n}\n\nasync function _initDayBuffer(dayPath:string) {\n  const logText = await getLogTextForDay(dayPath);\n  if (logText) theDayBuffer = logText.split('\\n');\n  theDayBufferPath = dayPath;\n}\n\nexport async function log(text:string, flushImmediately:boolean = false) {\n  /* v8 ignore if */\n  if (_isRunningOnDedicatedWorker()) throw Error('Unexpected - log() should not be called in worker thread.');\n  if (!theLoggingSettings) {\n    console.warn('Logging settings have not been applied yet. Failed to log:', text);\n    return;\n  }\n  if (!_isLoggingEnabled()) return; // Logging is disabled, so do nothing.\n\n  const timestamp = now();\n  const dayPath = getDayPath(timestamp);\n  if (theDayBufferPath === UNINITIALIZED_DAY_PATH) await _initDayBuffer(dayPath);\n\n  if (theDayBufferPath !== dayPath) { // New day, so set vars for next write to write old day and start a new buffer.\n    thePreviousDayEntryCount = theDayBuffer.length; \n    thePreviousDayPath = theDayBufferPath;\n    theDayBufferPath = dayPath; // Update the current day path\n  }\n  const date = new Date(timestamp);\n  const timePrefix = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' });\n  theDayBuffer.push(`[${timePrefix}] ${text}`);\n\n  if (flushImmediately) {\n    await _writeDayBuffer();\n    return;\n  }\n\n  if (theDebouncedWriteTimer) clearTimeout(theDebouncedWriteTimer);\n  theDebouncedWriteTimer = setTimeout(async () => {\n    await _writeDayBuffer();\n    theDebouncedWriteTimer = null;\n  }, theWriteDelayMs) as unknown as number;\n}\n\n// If today is 4/2/25 and you pass 1, returns \"2025-04-01\".\nfunction _getPastDayPath(daysAgo:number):string {\n  return getDayPath(now() - daysAgo * DAY);\n}\n\n// Intentionally not exported as a roadbump against sending logs to a service.\nasync function _getLogText(includeDayCount:number):Promise<string> {\n  let dayPaths = await findAllLoggedDays();\n  if (!dayPaths.length) return ''; // No logs to return.\n\n  if (includeDayCount !== Infinity) {\n    const oldestDayPath = _getPastDayPath(includeDayCount);\n    dayPaths = dayPaths.filter(dayPath => dayPath > oldestDayPath);\n  }\n\n  let logText = '';\n  for(let i = 0; i < dayPaths.length; ++i) {\n    const dayPath = dayPaths[i];\n    const dayLogText = await getLogTextForDay(dayPath);\n    if (!dayLogText) { console.error('Non-fatal error - no log text stored for ${dayPath} despite key being present.'); continue;}\n    logText += `--- ${dayPath} ---\\n`;\n    logText += dayLogText;\n  }\n  return logText;\n}\n\n// Supporting use case of user voluntarily, explicitly pasting the log into an email, bug report, or something similar.\nexport async function copyLogsToClipboard(includeDayCount:number = Infinity):Promise<boolean> {\n  const logText = await _getLogText(includeDayCount);\n  if (!logText.length) return false;\n  self.navigator.clipboard.writeText(logText);\n  return true;\n}\n\nexport async function deleteOldLogMessages() {\n  // Generate the key for the oldest day to preserve.\n  const olderThanDayCount = _getMaxRetentionDays();\n  assert(olderThanDayCount > 0); // Don't call this function if retention days not set.\n  const oldestDayPath = _getPastDayPath(olderThanDayCount);\n\n  // Because the keys are stored as `/log/YYYY-MM-DD.txt`, they are chronologically sortable.\n  // Find each key that came before the threshold key and delete it.\n  const dayPaths = await findAllLoggedDays();\n  const dayPathsToDelete = dayPaths.filter(dayPath => dayPath <= oldestDayPath);\n  const promises = dayPathsToDelete.map(deleteLogTextForDay);\n  return await Promise.all(promises);\n}\n\nexport async function deleteAllLogMessages() {\n  const dayPathsToDelete = await findAllLoggedDays();\n  const promises = dayPathsToDelete.map(deleteLogTextForDay);\n  return await Promise.all(promises);\n}\n\nexport async function applyLoggingSettings(loggingSettings:SettingValues) {\n  theLoggingSettings = loggingSettings;\n  const maxRetentionDays = _getMaxRetentionDays();\n  if (maxRetentionDays > 0) await deleteOldLogMessages();\n}\n\nexport function setAppName(appName:string) {\n  if (appName !== theAppName) {\n    theAppName = appName;\n    log(`*** ${appName} session ***`);\n  }\n}\n\nexport function setWriteDelay(delayMs:number) {\n  theWriteDelayMs = delayMs;\n}","import { errorToast, infoToast } from \"@/components/toasts/toastUtil\";\nimport { copyLogsToClipboard, deleteAllLogMessages } from \"@/localLogging/logUtil\";\nimport { botch } from \"@/common/assertUtil\";\n\nexport enum ButtonAction {\n  COPY_ALL_LOGS = 'copyAllLogs',\n  COPY_TODAY_LOGS = 'copyTodayLogs',\n  CLEAR_LOGS = 'clearLogs'\n};\n\nexport async function onLogSettingsButtonClick(value:ButtonAction) {\n  switch (value) {\n    case ButtonAction.COPY_ALL_LOGS:\n      try {\n        if (await copyLogsToClipboard()) {\n          infoToast(\"All logs copied to clipboard. You can paste them into an email, issue, etc.\");\n        } else {\n          infoToast(\"No logs found.\");\n        }\n      } catch (e) {\n        console.error(e);\n        errorToast(\"Could not copy logs to the clipboard.\");\n      }\n      break;\n    case ButtonAction.COPY_TODAY_LOGS:\n      try{\n        if (await copyLogsToClipboard(1)) {\n          infoToast(\"Todays logs copied to clipboard. You can paste them into an email, issue, etc.\");\n        } else {\n          infoToast(\"No logs found for today.\");\n        }\n      } catch (e) {\n        console.error(e);\n        errorToast(\"Could not copy logs to the clipboard.\");\n      }\n      break;\n    case ButtonAction.CLEAR_LOGS:\n      try {\n        await deleteAllLogMessages();\n        infoToast(\"Logs cleared.\");\n      } catch (e) {\n        console.error(e);\n        errorToast(\"Could not copy logs to the clipboard.\");\n      }\n      break;\n    default:\n      botch();\n  }\n}","import { getCategorySettings } from \"../../persistence/settings\";\nimport SettingCategory from \"../../settings/types/SettingCategory\";\nimport SettingType from \"../../settings/types/SettingType\";\nimport { mergeSettingValuesIntoCategory, settingsToSettingValues } from \"./settingCategoryUtil\";\nimport { ButtonAction, onLogSettingsButtonClick } from './interactions/loggingSettingsButtons';\nimport SettingValues from \"../types/SettingValues\";\n\nexport const LOGGING_CATEGORY_ID = \"logging\";\nexport const LOGGING_SETTING_ENABLE = \"enableLogging\";\nexport const LOGGING_SETTING_MAX_RETENTION_DAYS = \"maxRetentionDays\";\n\nfunction _getLoggingDefaultSettings():SettingCategory {\n  return {\n    name: \"Logging\",\n    id: LOGGING_CATEGORY_ID,\n    description: \"Settings for locally logging application events and errors. Logs are never sent to a server.\",\n    settings: [\n      {type: SettingType.BOOLEAN_TOGGLE, id:LOGGING_SETTING_ENABLE, label:\"Logging enabled?\", value:true},\n      {type: SettingType.NUMERIC, id:LOGGING_SETTING_MAX_RETENTION_DAYS, label:\"Max days to keep\", value:7, minValue:1, maxValue:1000, allowDecimals:false}, \n    ],\n    headings: [\n      {precedeSettingId:null, description:`Logs can be useful for troubleshooting problems with apps. You can copy them from this dialog and paste into emails, Github issues, etc.`,\n        buttons: [\n          { label:'Copy All Logs', value:ButtonAction.COPY_ALL_LOGS },\n          { label:'Copy Logs from Today', value:ButtonAction.COPY_TODAY_LOGS },\n          { label:'Clear Logs', value:ButtonAction.CLEAR_LOGS },\n        ],\n        /* v8 ignore next */\n        onButtonClick:(value) => onLogSettingsButtonClick(value as ButtonAction)\n      }\n    ],\n    disablementRules:[{ targetSettingId:LOGGING_SETTING_MAX_RETENTION_DAYS, criteriaSettingId:LOGGING_SETTING_ENABLE, criteriaValue:false }]\n  };\n}\n\nexport async function loadLoggingSettingCategory():Promise<SettingCategory> {\n  const settingValues = await getCategorySettings(LOGGING_CATEGORY_ID) ?? {};\n  return mergeSettingValuesIntoCategory(_getLoggingDefaultSettings(), settingValues);\n}\n\nexport async function getLoggingSettings():Promise<SettingValues> {\n  const loggingSettings = await getCategorySettings(LOGGING_CATEGORY_ID);\n  if (loggingSettings) return loggingSettings;\n  const defaultSettings = _getLoggingDefaultSettings();\n  return settingsToSettingValues(defaultSettings.settings);\n}","import { APP_CATEGORY_ID } from \"@/settings/categories/appSettingsUtil\";\nimport SettingsDialog from \"@/settings/settingsDialog/SettingsDialog\";\nimport SettingCategory from \"@/settings/types/SettingCategory\";\nimport { assert } from \"@/common/assertUtil\";\n\nlet theSetModalDialogName:Function|null = null;\nlet theOpeningCategoryId:string|null = null;\n\nfunction _findCategoryNoById(categories:SettingCategory[], categoryId:string):number {\n  if (categoryId.startsWith(APP_CATEGORY_ID)) return 0; // The app category is always the first one. Special-cased because matching ID is different.\n  return categories.findIndex(category => category.id === categoryId);\n}\n\nexport function initOpening(setModalDialogName:Function):void {\n  theSetModalDialogName = setModalDialogName;\n}\n\nexport function setOpeningCategoryId(categoryId:string|null):void {\n  theOpeningCategoryId = categoryId;\n}\n\nexport function findOpeningCategoryNo(categories:SettingCategory[]):number {\n  /* v8 ignore next */\n  assert(categories.length > 0);\n  if (!theOpeningCategoryId) return 0; // Default to the first category if none is selected.\n  const selectedCategoryNo = _findCategoryNoById(categories, theOpeningCategoryId);\n  /* v8 ignore next */\n  assert(selectedCategoryNo >= 0);\n  return selectedCategoryNo;\n}\n\nexport function openSettingsDialog(categoryId:string = APP_CATEGORY_ID):void {\n  if (!theSetModalDialogName) throw Error('Call openSettingsDialog() only after the DecentBar component has been rendered.');\n  setOpeningCategoryId(categoryId);\n  theSetModalDialogName(SettingsDialog.name);\n}","import SettingRow from \"../settings/types/SettingRow\";\nimport Heading, { HEADING_TYPE } from \"./types/Heading\";\nimport SettingCategory from \"./types/SettingCategory\";\nimport { LoadAppSettingsCallback, SaveAppSettingsCallback } from \"./types/AppSettingsCallbacks\";\nimport { getAppCategoryId, loadAppSettingCategory } from \"../settings/categories/appSettingsUtil\";\nimport { applyLlmSettings, LLM_CATEGORY_ID, loadLlmSettingCategory } from \"./categories/llmSettingsUtil\";\nimport { loadLoggingSettingCategory, LOGGING_CATEGORY_ID } from \"./categories/loggingSettingsUtil\";\nimport { isSettingFormat } from \"./types/Setting\";\nimport { setCategorySettings } from \"../persistence/settings\";\nimport AppSettingCategory from \"./types/AppSettingCategory\";\nimport { applyLoggingSettings } from \"../localLogging/logUtil\";\nimport { openSettingsDialog } from \"../components/decentBar/interactions/opening\";\nimport { settingsToSettingValues } from \"./categories/settingCategoryUtil\";\nimport { botch } from \"../common/assertUtil\";\nimport { getAppMetaData } from \"../appMetadata/appMetadataUtil\";\n\nexport function collateSettingRows(category:SettingCategory):SettingRow[] {\n  const rows:SettingRow[] = [];\n  const headings:Heading[] = category.headings ?? [];\n  category.settings.forEach(setting => {\n    let precedingHeading = headings.find(heading => heading.precedeSettingId === setting.id);\n    if (precedingHeading) rows.push({type:HEADING_TYPE, ...precedingHeading});\n    rows.push(setting);\n  });\n\n  const lastHeading = headings.find(heading => heading.precedeSettingId === null);\n  if (lastHeading) rows.push({type:HEADING_TYPE, ...lastHeading});\n\n  return rows;\n}\n\nexport function findDisabledSettings(category:SettingCategory):string[] {\n  if (!category.disablementRules) return [];\n  const disabledSettings:string[] = [];\n  category.disablementRules.forEach(rule => {\n    const criteriaSetting = category.settings.find(s => s.id === rule.criteriaSettingId);\n    if (!criteriaSetting) throw new Error(`Disablement rule for setting ${rule.targetSettingId} references non-existent criteria setting ${rule.criteriaSettingId}`);\n    const criteriaValue:any = (criteriaSetting as any).value;\n    if (criteriaValue === rule.criteriaValue) disabledSettings.push(rule.targetSettingId);\n  });\n  return disabledSettings;\n}\n\nexport function isSettingsFormat(maybeSettings:any):boolean {\n  if (!maybeSettings || typeof maybeSettings !== 'object') return false;\n  if (!Array.isArray(maybeSettings)) return false;\n  const settingsArray:any[] = maybeSettings;\n  return settingsArray.every(setting => isSettingFormat(setting));\n}\n\nexport async function loadSettingCategories(defaultAppCategory:AppSettingCategory, onLoadAppSettings?:LoadAppSettingsCallback):Promise<SettingCategory[]> {\n  const appCategory = await loadAppSettingCategory(defaultAppCategory, onLoadAppSettings);\n  const llmCategory = await loadLlmSettingCategory();\n  const loggingCategory = await loadLoggingSettingCategory();\n  return [appCategory, llmCategory, loggingCategory];\n}\n\nexport async function saveSettingCategories(categories:SettingCategory[], onSaveAppSettings?:SaveAppSettingsCallback):Promise<void> {\n  const { id:appId } = await getAppMetaData();\n  const appCategoryId = getAppCategoryId(appId);\n  const promises = categories.map(category => {\n    let settingValues = settingsToSettingValues(category.settings);\n    switch (category.id) {\n      case appCategoryId:\n        if (onSaveAppSettings) {\n          const overrideAppSettings = onSaveAppSettings(settingValues);\n          if (overrideAppSettings) settingValues = {...settingValues, ...overrideAppSettings };\n        }\n      break;\n\n      case LOGGING_CATEGORY_ID:\n        applyLoggingSettings(settingValues);\n      break;\n\n      case LLM_CATEGORY_ID:\n        applyLlmSettings(settingValues);\n      break;\n\n      /* v8 ignore start */\n      default:\n        botch();\n      /* v8 ignore end */\n    }\n    return setCategorySettings(category.id, settingValues);\n  });\n  try {\n    await Promise.all(promises);\n  } catch (error) {\n    console.error(\"Error saving settings:\", error);\n    throw new Error(\"Failed to save settings. Please try again later.\");\n  }\n}\n\nexport function openSettings(categoryId?:string) {\n  openSettingsDialog(categoryId);\n}","enum Direction {\n  ABOVE,\n  BELOW,\n  RIGHT,\n  LEFT\n}\n\nexport default Direction;","import { CSSProperties } from \"react\";\n\nimport Direction from \"./types/Direction\";\nimport Rect from \"./types/Rect\";\nimport { assert } from \"@/common/assertUtil\";\nimport { browserClientRect } from \"@/common/windowUtil\";\n\nexport const DEFAULT_DIRECTIONS:Direction[] = [Direction.ABOVE, Direction.BELOW, Direction.RIGHT, Direction.LEFT];\n\nfunction _domRectToRect(rect:DOMRect):Rect {\n  return {\n    left: rect.left,\n    top: rect.top,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction _calcAboveOffset(t:Rect, p:Rect):[dx:number, dy:number] {\n  let left = t.left + Math.round((t.width - p.width) / 2);\n  let top = t.top - p.height;\n  return [left - p.left, top - p.top];\n}\n\nfunction _calcBelowOffset(t:Rect, p:Rect):[dx:number, dy:number] {\n  let left = t.left + Math.round((t.width - p.width) / 2);\n  let top = t.top + t.height;\n  return [left - p.left, top - p.top];\n}\n\nfunction _calcLeftOffset(t:Rect, p:Rect):[dx:number, dy:number] {\n  let left = t.left - p.width;\n  let top = t.top + Math.round((t.height - p.height) / 2);\n  return [left - p.left, top - p.top];\n}\n\nfunction _calcRightOffset(t:Rect, p:Rect):[dx:number, dy:number] {\n  let left = t.left + t.width;\n  let top = t.top + Math.round((t.height - p.height) / 2);\n  return [left - p.left, top - p.top];\n}\n\ntype OffsetFunction = (targetRect:Rect, popoverRect:Rect) => [dx:number, dy:number];\n\nconst offsetFunctions:OffsetFunction[] = [];\noffsetFunctions[Direction.ABOVE] = _calcAboveOffset;\noffsetFunctions[Direction.BELOW] = _calcBelowOffset;\noffsetFunctions[Direction.LEFT] = _calcLeftOffset;\noffsetFunctions[Direction.RIGHT] = _calcRightOffset;\n\nexport function getTryDirections(preferredDirection?: Direction | Direction[], allowedDirections?:Direction[]): Direction[] {\n  if (preferredDirection === undefined) preferredDirection = DEFAULT_DIRECTIONS;\n  /* v8 ignore next */\n  assert(allowedDirections === undefined || allowedDirections.length > 0, \"If allowedDirections is specified, it must be a non-empty array.\");\n  if (!Array.isArray(preferredDirection)) preferredDirection = [preferredDirection];\n  const directions:Direction[] = [];\n  preferredDirection.forEach(d => {if (!directions.includes(d) && (!allowedDirections || allowedDirections.includes(d))) directions.push(d) });\n  DEFAULT_DIRECTIONS.forEach(d => {if (!directions.includes(d) && (!allowedDirections || allowedDirections.includes(d))) directions.push(d) });\n  /* v8 ignore next */\n  assert(directions.length > 0); // Since caller specified at least one allowed direction, there should be at least one direction in the result.\n  return directions;\n}\n\nfunction _doesRectContainRect(containerRect:Rect, innerRect:Rect):boolean {\n  return containerRect.left <= innerRect.left &&\n         containerRect.top <= innerRect.top &&\n         (containerRect.left + containerRect.width) >= (innerRect.left + innerRect.width) &&\n         (containerRect.top + containerRect.height) >= (innerRect.top + innerRect.height);\n}\n\nfunction _fixOobRect(containerRect:Rect, innerRect:Rect):Rect {\n  const rect = {...innerRect};\n  if (innerRect.left < containerRect.left) {\n    rect.left = containerRect.left;\n  } else if ((innerRect.left + innerRect.width) > (containerRect.left + containerRect.width)) {\n    rect.left = containerRect.left + containerRect.width - innerRect.width;\n  }\n  if (innerRect.top < containerRect.top) {\n    rect.top = containerRect.top;\n  } else if ((innerRect.top + innerRect.height) > (containerRect.top + containerRect.height)) {\n    rect.top = containerRect.top + containerRect.height - innerRect.height;\n  }\n  return rect;\n}\n\nexport function calcPopoverPositionStyle(tryDirections:Direction[], targetElement:HTMLDivElement, popoverContentElement:HTMLDivElement):CSSProperties {\n  const targetRect = _domRectToRect(targetElement.getBoundingClientRect());\n  const popoverRect = _domRectToRect(popoverContentElement.getBoundingClientRect());\n  const browserRect = _domRectToRect(browserClientRect());\n  const tryRect = {...popoverRect};\n\n  let dx = 0, dy = 0, firstDx = 0, firstDy = 0, directionI = 0;\n  for(; directionI < tryDirections.length; ++directionI) {\n    const direction = tryDirections[directionI];\n    [dx, dy] = offsetFunctions[direction](targetRect, popoverRect);\n    if (directionI === 0) {\n      firstDx = dx;\n      firstDy = dy;\n    }\n    tryRect.left = popoverRect.left + dx;\n    tryRect.top = popoverRect.top + dy;\n    if (_doesRectContainRect(browserRect, tryRect)) break;\n  }\n  if (directionI === tryDirections.length) { // If no direction was in-bounds, use the first (most preferred) direction.\n    tryRect.left = popoverRect.left + firstDx;\n    tryRect.top = popoverRect.top + firstDy;\n    const fixedRect = _fixOobRect(browserRect, tryRect);\n    dx = fixedRect.left - popoverRect.left;\n    dy = fixedRect.top - popoverRect.top;\n  }\n\n  return { transform: `translate(${dx}px, ${dy}px)` };\n}","import { useState, useRef, ReactNode, MouseEvent, useEffect, CSSProperties } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport styles from './Popover.module.css';\nimport Direction from './types/Direction';\nimport { calcPopoverPositionStyle, getTryDirections } from './popOverUtil';\n\ntype Props = {\n  children:ReactNode;  // Element that triggers the popover\n  content:ReactNode;   // Content to show in the popover\n  preferredDirection?:Direction|Direction[]; // Optional preferred direction(s) for the popover to display relative to the trigger element's rect.\n  allowedDirections?:Direction[]; // Optional allowed directions for the popover to display. If specified, only these directions will be considered.\n};\n\nconst POPOVER_HIDDEN_STYLE:CSSProperties = { 'visibility': 'hidden' };\n\nfunction Popover({ children, content, preferredDirection, allowedDirections }: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [tryDirections, setTryDirections] = useState<Direction[]>([]);\n  const [popoverPositionStyle, setPopoverPositionStyle] = useState<CSSProperties>({});\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const directions = getTryDirections(preferredDirection, allowedDirections);\n    setTryDirections(directions);\n  }, []);\n\n  const contentBoxStyle = isOpen ? popoverPositionStyle : POPOVER_HIDDEN_STYLE;\n\n  function _onMouseOver(event:MouseEvent<HTMLDivElement>) {\n    if (!containerRef.current || !contentRef.current || isOpen) return;\n    const relatedTarget = event.relatedTarget as HTMLDivElement | null;\n    if (relatedTarget && containerRef.current.contains(relatedTarget)) return; // Ignore if moving within the container\n    const nextPopoverPositionStyle = calcPopoverPositionStyle(tryDirections, containerRef.current, contentRef.current);\n    setPopoverPositionStyle(nextPopoverPositionStyle);\n    setIsOpen(true);\n  };\n\n  function _onMouseOut(event:MouseEvent<HTMLDivElement>) {\n    if (!containerRef.current || !contentRef.current || !isOpen) return;\n    const relatedTarget = event.relatedTarget as Node | null;\n    const isInsideContent = contentRef.current.contains(relatedTarget);\n    const isInsideContainer = containerRef.current.contains(relatedTarget);\n    if (isInsideContainer || isInsideContent) return; // Don't hide if moving within the contentBox.\n    setIsOpen(false);\n  };\n\n  const popoverContent = createPortal(<div className={styles.contentBox} style={contentBoxStyle} ref={contentRef} onMouseOut={_onMouseOut}>{content}</div>, document.body);\n\n  return (\n    <div className={styles.container} ref={containerRef}>\n      <div onMouseOver={_onMouseOver} onMouseOut={_onMouseOut}>{children}</div>\n      {popoverContent}\n    </div>\n  );\n}\n\nexport default Popover;","import { ReactNode } from 'react';\n\nimport styles from './Selector.module.css';\nimport Popover from '../popOver/PopOver';\nimport Direction from '../popOver/types/Direction';\n\ntype Props = {\n  disabled?:boolean,\n  label?:string,\n  selectedOptionNo:number,\n  optionNames:string[],\n  displayAsTabs?:boolean,\n  onChange?:(optionNo:number) => void,\n  onClick?:(optionNo:number) => void,\n  popoverContent?:ReactNode[],\n  popoverPreferredDirection?:Direction|Direction[]; // Optional preferred direction(s) for the popover to display relative to the trigger element's rect. Ignored if popoverContent undefined.\n  popoverAllowedDirections?:Direction[], // Optional allowed directions for the popover to display. If specified, only these directions will be considered.\n  iconChars?:(string|null)[], // Unicode chars to use as icons.\n}\n\nfunction Selector({ disabled, label, optionNames, onClick, onChange, selectedOptionNo, \n    displayAsTabs, popoverContent, popoverPreferredDirection, popoverAllowedDirections, iconChars }:Props) {\n\n  function _onOptionClick(optionNo:number) {\n    if (disabled) return;\n    if (onClick) onClick(optionNo);\n    if (optionNo === selectedOptionNo) return;\n    if (onChange) onChange(optionNo);\n  }\n\n  const iconClass = disabled ? styles.iconDisabled : styles.icon;\n  const options = optionNames.map((optionName, optionNo) => {\n    const reclickableSelection = onClick !== undefined;\n    const selectorButtonSelected = reclickableSelection ? styles.selectorButtonSelectedReclickable : styles.selectorButtonSelected;\n    const selected = optionNo === selectedOptionNo;\n    let buttonClass = disabled\n      ? styles.selectorButtonDisabled\n      : selected ? selectorButtonSelected : styles.selectorButton;\n    const textClass = disabled\n      ? styles.selectorButtonTextDisabled\n      : selected ? styles.selectorButtonTextSelected : styles.selectorButtonText;\n\n    if (displayAsTabs) {\n      buttonClass = `${buttonClass} ${styles.tabButton}`;\n    } else {\n      if (optionNo === 0) buttonClass = `${buttonClass} ${styles.firstSelectorButton}`;\n      if (optionNo === optionNames.length-1) buttonClass = `${buttonClass} ${styles.lastSelectorButton}`;\n    }\n    const iconContent = iconChars && iconChars[optionNo] ? <span className={iconClass}>{iconChars[optionNo]}</span> : null;\n    const optionButtonContent = (\n      <button key={optionName} className={buttonClass} onClick={() => _onOptionClick(optionNo) } disabled={disabled}>\n        {iconContent}<span className={textClass}>{optionName}</span>\n      </button>\n    );\n    return popoverContent \n      ? <Popover key={optionName} content={popoverContent[optionNo]} preferredDirection={popoverPreferredDirection} allowedDirections={popoverAllowedDirections}>{optionButtonContent}</Popover> \n      : optionButtonContent;\n  });\n\n  const labelElement = label ? <span className={styles.label}>{label}:</span> : null;\n\n  return (\n    <div className={styles.bar}>\n      {labelElement}\n      {options}\n    </div>  \n  );\n}\n\nexport default Selector;","import Selector from \"../../components/selector/Selector\"\n\ntype Props = {\n  categoryNames: string[],\n  selectedCategoryNo: number,\n  onChange:(categoryNo: number) => void,\n  disabled?: boolean\n}\n\nfunction SettingsCategorySelector({ categoryNames, selectedCategoryNo, onChange, disabled }: Props) {\n  return (\n    <Selector optionNames={categoryNames} selectedOptionNo={selectedCategoryNo} onChange={onChange} disabled={disabled} displayAsTabs />\n  );\n}\n\nexport default SettingsCategorySelector;","/* v8 ignore next */\nexport const LAST_VALID_VALUE = 'LAST_VALID_VALUE';\n\n// Because settings always begin in a valid default state, there is no need to delay\n// display of validation failures to a \"save\" or \"submit\" action.\n\ntype ValidationFailure = {\n  failReason?: string; // Undefined - don't show a failure message. (Useful for a silent correction made with nextValue.)\n  nextValue?: any; // Undefined - allow the invalid value. LAST_VALID_VALUE - revert to the last valid value.\n}\n\nexport default ValidationFailure;","import Setting from \"@/settings/types/Setting\";\nimport { ValidateSettingCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport { LAST_VALID_VALUE } from \"@/settings/types/ValidationFailure\";\n\nlet theValidationMessageDelayMs = 3000;\nconst theValidationMessageTimers = new Map<string, NodeJS.Timeout>();\n\nfunction _clearValidationMessageTimer(settingId:string) {\n  const previousTimer = theValidationMessageTimers.get(settingId);\n  if (previousTimer) {\n    clearTimeout(previousTimer);\n    theValidationMessageTimers.delete(settingId);\n  }\n}\n\nfunction _setValidationMessageTimer(settingId:string, setValidationMessage:Function) {\n  _clearValidationMessageTimer(settingId);\n  const timer = setTimeout(() => {\n    setValidationMessage(null);\n    theValidationMessageTimers.delete(settingId);\n  }, theValidationMessageDelayMs);\n  theValidationMessageTimers.set(settingId, timer);\n}\n\nexport function setClearValidationMessageDelay(delayMs:number) {\n  theValidationMessageDelayMs = delayMs;\n}\n\nexport function handleValidation(nextSetting:Setting, lastValidValue:any, setValidationMessage:Function, onValidateSetting?:ValidateSettingCallback):boolean {\n  if (!onValidateSetting) { setValidationMessage(null); return true; }\n  const validationFailure = onValidateSetting(nextSetting.id, nextSetting.value);\n  if (validationFailure) {\n    _clearValidationMessageTimer(nextSetting.id);\n    setValidationMessage(validationFailure.failReason ?? null);\n    if (validationFailure.nextValue !== undefined) {\n      (nextSetting as any).value = validationFailure.nextValue === LAST_VALID_VALUE ? lastValidValue : validationFailure.nextValue;\n      // A message shown should be hidden after a short delay, because the problem with the value has been resolved.\n      if (validationFailure.failReason) _setValidationMessageTimer(nextSetting.id, setValidationMessage);\n      return true;\n    }\n    return false;\n  }\n  setValidationMessage(null);\n  return true;\n}","import { useState } from \"react\";\n\nimport BooleanToggleSetting from \"@/settings/types/BooleanToggleSetting\";\nimport { ValidateSettingCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport styles from \"./Setters.module.css\";\nimport Selector from \"@/components/selector/Selector\";\nimport { handleValidation } from \"./setterUtil\";\n\ntype Props = {\n  setting:BooleanToggleSetting,\n  onChange:(setting:BooleanToggleSetting, isValid:boolean) => void,\n  onValidateSetting?:ValidateSettingCallback,\n  disabled?:boolean\n}\n\nfunction BooleanToggleSetter({ setting, onChange, onValidateSetting, disabled }:Props) {\n  const [lastValidValue, setLastValidValue] = useState<boolean>(setting.value);\n  const [validationMessage, setValidationMessage] = useState<boolean|null>(null);\n  \n  function _onChange(value:boolean) {\n    const nextSetting = { ...setting, value };\n    const isValid = handleValidation(nextSetting, lastValidValue, setValidationMessage, onValidateSetting);\n    if (isValid) setLastValidValue(nextSetting.value);\n    onChange(nextSetting, isValid);\n  }\n\n  const validationContent = validationMessage ? <div className={styles.validationMessage}>{validationMessage}</div> : null;\n  const optionNames = [setting.falseLabel ?? \"No\", setting.trueLabel ?? \"Yes\"];\n\n  const labelClass = disabled ? styles.labelDisabled : styles.label;\n  return (\n    <div className={styles.container}>\n      <span className={labelClass}>{setting.label}</span>\n      <Selector optionNames={optionNames} selectedOptionNo={setting.value ? 1 : 0} onChange={optionNo => _onChange(optionNo === 1)} disabled={disabled}/>\n      {validationContent}\n    </div>\n  );\n}\n\nexport default BooleanToggleSetter;","import { useEffect, useState, CSSProperties } from \"react\";\n\nimport { assert } from \"@/common/assertUtil\";\n\n// TODO - refactor to sl-react-ui.\n\ntype Props = {\n  className?: string;\n  minValue: number;\n  maxValue: number;\n  digitWidth?: number;\n  allowDecimals?: boolean;\n  value: number;\n  onChange(value:number): void;  // Guaranteed to only return valid numbers between minValue and maxValue.\n  disabled?: boolean; \n}\n\n// Allow for digits, minus sign, and decimal point. Strip out all other characters.\nfunction _stripNonNumeric(text: string): string {\n  return text.replace(/[^0-9.-]/g, '');\n}\n\n// Return number of digits in a number.\nfunction getDigitCount(value: number): number {\n  if (value === 0) return 1;\n  let digitCount = Math.floor(Math.log10(Math.abs(value))) + 1;\n  if (value < 0) digitCount++; // Account for minus sign.\n  return digitCount;\n}\n\nfunction _createDigitWidthStyle(minValue:number, maxValue:number, allowDecimals?:boolean, digitWidth?:number):CSSProperties {\n  let digitCount = digitWidth ?? Math.max(getDigitCount(minValue), getDigitCount(maxValue));\n  if (allowDecimals) digitCount += 2; // Account for decimal point and one digit after it.\n  if (!digitCount) return {};\n  return {width: `calc(${digitCount}ch + 1vh)`};\n}\n\nfunction NumericInput({minValue, maxValue, value, onChange, className, allowDecimals, digitWidth, disabled}: Props) {\n  const [inputValue, setInputValue] = useState<string>(value.toString());\n  const [digitWidthStyle, setDigitWidthStyle] = useState<CSSProperties>({});\n\n  useEffect(() => {\n    assert(value >= minValue && value <= maxValue); // Caller error: supplying a value outside the range.\n    setInputValue(value.toString());\n  }, [value]);\n\n  useEffect(() => {\n    const nextDigitWidthStyle:CSSProperties = _createDigitWidthStyle(minValue, maxValue, allowDecimals, digitWidth);\n    setDigitWidthStyle(nextDigitWidthStyle);\n  }, [digitWidth, minValue, maxValue, allowDecimals]);\n\n  function _textToValidNumber(text: string): number {\n    try {\n      let number = Number(text);\n      if (isNaN(number)) text = _stripNonNumeric(text); // Salvage the intent of something like \"45x\", if possible.\n      number = Number(text);\n      if (!allowDecimals) number = Math.round(number);\n      if (number < minValue || isNaN(number)) return minValue;\n      return (number > maxValue) ? maxValue : number;\n    } catch (error) {\n      return minValue;\n    }\n  }\n\n  function _handleChange(text:string) {\n    setInputValue(text); // Always need to update text even if it's invalid, because that's how typing works.\n    const number = _textToValidNumber(text);\n    if ('' + number === text) onChange(number); // But if the new value is valid, let the caller use it without waiting for blur.\n  }\n\n  function _handleBlur(text:string) {\n    const number = _textToValidNumber(text);\n    if ('' + number !== text) setInputValue(number.toString());\n    onChange(number);\n  }\n\n  return (\n    <input \n      type='text' value={inputValue} style={digitWidthStyle} className={className} \n      onChange={(event) => _handleChange(event.target.value)} onBlur={(event) => _handleBlur(event.target.value)} \n      disabled={disabled}\n    />\n  );\n}\n\nexport default NumericInput;","import { useState } from \"react\";\n\nimport NumericRangeSetting from \"@/settings/types/NumericSetting\";\nimport styles from \"./Setters.module.css\";\nimport NumericInput from \"@/components/numericInput/NumericInput\";\nimport { ValidateSettingCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport { handleValidation } from \"./setterUtil\";\n\ntype Props = {\n  setting:NumericRangeSetting,\n  onChange:(setting:NumericRangeSetting, isValid:boolean) => void,\n  onValidateSetting?:ValidateSettingCallback,\n  disabled?:boolean\n}\n\nfunction NumericSetter({ setting, onChange, onValidateSetting, disabled }:Props) {\n  const [lastValidValue, setLastValidValue] = useState<number>(setting.value);\n  const [validationMessage, setValidationMessage] = useState<string | null>(null);\n\n  function _onChange(value:number) {\n    const nextSetting = { ...setting, value };\n    const isValid = handleValidation(nextSetting, lastValidValue, setValidationMessage, onValidateSetting);\n    if (isValid) setLastValidValue(nextSetting.value);\n    onChange(nextSetting, isValid);\n  }\n  const validationContent = validationMessage ? <div className={styles.validationMessage}>{validationMessage}</div> : null;\n\n  const labelClass = disabled ? styles.labelDisabled : styles.label;\n  return (\n    <div className={styles.container}>\n      <span className={labelClass}>{setting.label}</span>\n      <NumericInput \n        minValue={setting.minValue} \n        maxValue={setting.maxValue} \n        allowDecimals={setting.allowDecimals} \n        value={setting.value} \n        onChange={_onChange} \n        disabled={disabled}\n      />\n      {validationContent}\n    </div>\n  );\n}\n\nexport default NumericSetter;","import { useState } from \"react\";\n\nimport TextSetting from \"@/settings/types/TextSetting\";\nimport { ValidateSettingCallback } from \"../../types/AppSettingsCallbacks\";\nimport styles from \"./Setters.module.css\";\nimport { handleValidation } from \"./setterUtil\";\n\ntype Props = {\n  setting:TextSetting,\n  onChange:(setting:TextSetting, isValid:boolean) => void,\n  onValidateSetting?:ValidateSettingCallback\n  disabled?:boolean,\n}\n\nfunction TextSetter({ setting, onChange, onValidateSetting, disabled }:Props) {\n  const [validationMessage, setValidationMessage] = useState<string | null>(null);\n  const [lastValidValue, setLastValidValue] = useState<string|null>(setting.value);\n  \n  function _onChange(value:string) {\n    const nextSetting = { ...setting, value };\n    const isValid = handleValidation(nextSetting, lastValidValue, setValidationMessage, onValidateSetting);\n    if (isValid) setLastValidValue(nextSetting.value);\n    onChange(nextSetting, isValid);\n  }\n\n  const validationContent = validationMessage ? <div className={styles.validationMessage}>{validationMessage}</div> : null;\n\n  const labelClass = disabled ? styles.labelDisabled : styles.label;\n  return (\n    <div className={styles.container}>\n      <span className={labelClass}>{setting.label}</span>\n      <input\n        id={setting.id}\n        type=\"text\"\n        value={setting.value}\n        onChange={(e) => _onChange(e.target.value)}\n        placeholder={setting.placeholder}\n        disabled={disabled}\n      />\n      {validationContent}\n    </div>\n  );\n}\n\nexport default TextSetter;","import styles from './HeadingButton.module.css';\n\ntype Props = {\n  text:string,\n  onClick:any\n  disabled?:boolean\n}\n\nfunction HeadingButton({ text, onClick, disabled }:Props) {\n  const buttonClass = disabled ? styles.headingButtonDisabled : styles.headingButton;\n  const textClass = disabled ? styles.headingButtonTextDisabled : styles.headingButtonText;\n  return (\n    <button className={buttonClass} onClick={onClick} disabled={disabled}>\n      <span className={textClass}>{text}</span>\n    </button>\n  );\n}\n\nexport default HeadingButton;","import HeadingType from \"@/settings/types/Heading\";\nimport styles from \"./Setters.module.css\";\nimport HeadingButton from \"./HeadingButton\";\n\ntype Props = {\n  heading:HeadingType,\n  disabled?:boolean\n}\n\nfunction _renderButtons(heading:HeadingType, disabled?:boolean) {\n  if (!heading.buttons) return null;\n  return heading.buttons.map(button => {\n    return (\n        <HeadingButton key={button.value} text={button.label} onClick={() => heading.onButtonClick?.(button.value)} disabled={disabled}/>\n    );\n  });\n}\n\nfunction Heading({heading, disabled}:Props) {\n  const buttonsContent = !heading.buttons ? null : <div className={styles.buttonsContainer}>{_renderButtons(heading, disabled)}</div>;\n  const headingClass = disabled ? styles.headingDisabled : styles.heading;\n  return (\n    <div className={headingClass}>\n      <p>{heading.description}</p>\n      {buttonsContent}\n    </div>\n  );\n}\n\nexport default Heading;","import { useMemo, useEffect, useState } from 'react';\n\nimport styles from './LlmSpeed.module.css';\n\ntype Props = {\n  inputCharsPerSec?:number,\n  outputCharsPerSec?:number\n}\n\nfunction _getRateText(prefix:string, rate?:number):string {\n  if (rate === undefined || rate === 0) return `${prefix}: unknown`;\n  if (rate !== Math.round(rate)) rate = Math.round(rate * 10) / 10;\n  return `${prefix}: ${rate} chars/sec`;\n}\n\ntype RenderTiming = {\n  startTime:number,\n  inputDuration:number,\n  outputDuration:number\n}\n\nconst INPUT_PREFIX = 'input', OUTPUT_PREFIX = 'output';\n\nfunction _calcRenderTiming(inputCharsPerSec?:number, outputCharsPerSec?:number):RenderTiming {\n  const startTime = Date.now();\n  const inputDuration = inputCharsPerSec === undefined \n    ? 0 \n    : _getRateText(INPUT_PREFIX, inputCharsPerSec).length / inputCharsPerSec * 1000;\n  const outputDuration = outputCharsPerSec === undefined \n    ? 0 \n    : _getRateText(OUTPUT_PREFIX, outputCharsPerSec).length / outputCharsPerSec * 1000;\n  return { startTime, inputDuration, outputDuration };\n}\n\nfunction _calcProgress(renderTiming:RenderTiming):{inputProgress:number, outputProgress:number } {\n  const { startTime, inputDuration, outputDuration } = renderTiming;\n  const overallTime = inputDuration + outputDuration;\n  const elapsed = (Date.now() - startTime) % overallTime;\n  let inputProgress = 0, outputProgress = 0;\n  if (elapsed < inputDuration) {\n    inputProgress = elapsed / inputDuration;\n  } else {\n    inputProgress = 1;\n    outputProgress = (elapsed - inputDuration) / outputDuration;\n  }\n  return { inputProgress, outputProgress };\n}\n\nconst FRAMES_PER_SEC = 20, FRAME_INTERVAL = 1000 / FRAMES_PER_SEC;\n\nfunction LlmSpeed({inputCharsPerSec, outputCharsPerSec}:Props) {\n  const [frameNo, setFrameNo] = useState(0);\n  const [renderTiming] = useState<RenderTiming>(_calcRenderTiming(inputCharsPerSec, outputCharsPerSec));\n  const inputText = useMemo(() => _getRateText('input', inputCharsPerSec), [inputCharsPerSec]);\n  const outputText = useMemo(() => _getRateText('output', outputCharsPerSec), [outputCharsPerSec]);\n\n  const {inputProgress, outputProgress} = _calcProgress(renderTiming);\n\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setFrameNo(frameNo + 1);\n    }, FRAME_INTERVAL);\n    return () => clearInterval(interval);\n  }, [frameNo]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.inputSpeedBox}>\n        <div\n          className={styles.progressBar}\n          style={{ width: `${inputProgress * 100}%` }}\n        />\n        <div\n          className={styles.overTextBar}\n          style={{ width: `${(1 - inputProgress) * 100}%` }}\n        />\n        {inputText}\n      </div>\n      <div className={styles.outputSpeedBox}>\n        <div\n          className={styles.progressBar}\n          style={{ width: `${outputProgress * 100}%` }}\n        />\n        <div\n          className={styles.overTextBar}\n          style={{ width: `${(1 - outputProgress) * 100}%` }}\n        />\n        {outputText}\n      </div>\n    </div>\n  );\n}\n\nexport default LlmSpeed;","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M17,17H7V7H17M21,11V9H19V7C19,5.89%2018.1,5%2017,5H15V3H13V5H11V3H9V5H7C5.89,5%205,5.89%205,7V9H3V11H5V13H3V15H5V17A2,2%200%200,0%207,19H9V21H11V19H13V21H15V19H17A2,2%200%200,0%2019,17V15H21V13H19V11M13,13H11V11H13M15,9H9V15H15V9Z'%20/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M12,3C7.58,3%204,4.79%204,7C4,9.21%207.58,11%2012,11C16.42,11%2020,9.21%2020,7C20,4.79%2016.42,3%2012,3M4,9V12C4,14.21%207.58,16%2012,16C16.42,16%2020,14.21%2020,12V9C20,11.21%2016.42,13%2012,13C7.58,13%204,11.21%204,9M4,14V17C4,19.21%207.58,21%2012,21C16.42,21%2020,19.21%2020,17V14C20,16.21%2016.42,18%2012,18C7.58,18%204,16.21%204,14Z'%20/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M13%2011H11V5H13M13%2015H11V13H13M20%202H4C2.9%202%202%202.9%202%204V22L6%2018H20C21.1%2018%2022%2017.1%2022%2016V4C22%202.9%2021.1%202%2020%202Z'%20/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M12%2016C13.66%2016%2015%2014.66%2015%2013C15%2011.88%2014.39%2010.9%2013.5%2010.39L3.79%204.77L9.32%2014.35C9.82%2015.33%2010.83%2016%2012%2016M12%203C10.19%203%208.5%203.5%207.03%204.32L9.13%205.53C10%205.19%2011%205%2012%205C16.42%205%2020%208.58%2020%2013C20%2015.21%2019.11%2017.21%2017.66%2018.65H17.65C17.26%2019.04%2017.26%2019.67%2017.65%2020.06C18.04%2020.45%2018.68%2020.45%2019.07%2020.07C20.88%2018.26%2022%2015.76%2022%2013C22%207.5%2017.5%203%2012%203M2%2013C2%2015.76%203.12%2018.26%204.93%2020.07C5.32%2020.45%205.95%2020.45%206.34%2020.06C6.73%2019.67%206.73%2019.04%206.34%2018.65C4.89%2017.2%204%2015.21%204%2013C4%2012%204.19%2011%204.54%2010.1L3.33%208C2.5%209.5%202%2011.18%202%2013Z'%20/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M8,3A2,2%200%200,0%206,5V9A2,2%200%200,1%204,11H3V13H4A2,2%200%200,1%206,15V19A2,2%200%200,0%208,21H10V19H8V14A2,2%200%200,0%206,12A2,2%200%200,0%208,10V5H10V3M16,3A2,2%200%200,1%2018,5V9A2,2%200%200,0%2020,11H21V13H20A2,2%200%200,0%2018,15V19A2,2%200%200,1%2016,21H14V19H16V14A2,2%200%200,1%2018,12A2,2%200%200,1%2016,10V5H14V3H16Z'%20/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2024%2024'%3e%3cpath%20d='M9.23,17.59V23.12H6.88V6.72C6.88,5.27%207.31,4.13%208.16,3.28C9,2.43%2010.17,2%2011.61,2C13,2%2014.07,2.34%2014.87,3C15.66,3.68%2016.05,4.62%2016.05,5.81C16.05,6.63%2015.79,7.4%2015.27,8.11C14.75,8.82%2014.08,9.31%2013.25,9.58V9.62C14.5,9.82%2015.47,10.27%2016.13,11C16.79,11.71%2017.12,12.62%2017.12,13.74C17.12,15.06%2016.66,16.14%2015.75,16.97C14.83,17.8%2013.63,18.21%2012.13,18.21C11.07,18.21%2010.1,18%209.23,17.59M10.72,10.75V8.83C11.59,8.72%2012.3,8.4%2012.87,7.86C13.43,7.31%2013.71,6.7%2013.71,6C13.71,4.62%2013,3.92%2011.6,3.92C10.84,3.92%2010.25,4.16%209.84,4.65C9.43,5.14%209.23,5.82%209.23,6.71V15.5C10.14,16.03%2011.03,16.29%2011.89,16.29C12.73,16.29%2013.39,16.07%2013.86,15.64C14.33,15.2%2014.56,14.58%2014.56,13.79C14.56,12%2013.28,11%2010.72,10.75Z'%20/%3e%3c/svg%3e\"","import { assert, botch } from '@/common/assertUtil';\nimport ModelDeviceProblem from \"./types/ModelDeviceProblem\"\nimport styles from './ModelDeviceProblemsList.module.css';\nimport InsufficientMemoryIcon from './icons/memory.svg';\nimport InsufficientStorageIcon from './icons/database.svg';\nimport BadLoadSuccessIcon from './icons/message-alert.svg';\nimport BadPerformanceIcon from './icons/speedometer-slow.svg';\nimport DeveloperIcon from './icons/code-braces.svg';\nimport BetaIcon from './icons/beta.svg';\nimport ModelDeviceProblemType from './types/ModelDeviceProblemType';\n\ntype Props = {\n  problems:ModelDeviceProblem[]|null\n}\n\nfunction _renderProblemIcon(problemType:ModelDeviceProblemType) {\n  switch(problemType) {\n    case ModelDeviceProblemType.INSUFFICIENT_VRAM:  return <img className={styles.icon} src={InsufficientMemoryIcon} alt='Insufficient VRAM' />;\n    case ModelDeviceProblemType.INSUFFICIENT_STORAGE: return <img className={styles.icon} src={InsufficientStorageIcon} alt='Insufficient Storage' />;\n    case ModelDeviceProblemType.BAD_LOAD_SUCCESS_HISTORY: return <img className={styles.icon} src={BadLoadSuccessIcon} alt='Bad Load Success History' />;\n    case ModelDeviceProblemType.BAD_PERFORMANCE_HISTORY: return <img className={styles.icon} src={BadPerformanceIcon} alt='Bad Performance History' />;\n    case ModelDeviceProblemType.WEBGPU_NOT_AVAILABLE: return <img className={styles.icon} src={InsufficientMemoryIcon} alt='WebGPU Not Available' />;\n    case ModelDeviceProblemType.DEVELOPER_MODE: return <img className={styles.icon} src={DeveloperIcon} alt='Developer Mode' />;\n    case ModelDeviceProblemType.BETA: return <img className={styles.icon} src={BetaIcon} alt='Beta' />;\n    default: botch();\n  }\n}\n\nfunction ModelDeviceProblemsList({problems}:Props) {\n  if (!problems) return null;\n\n  assert(problems.length >= 1);\n\n  const problemsContent = problems.map((problem, problemI) => {\n    return <li key={problemI}>{_renderProblemIcon(problem.type)}{problem.description}</li>\n  });\n\n  return <ul className={styles.problemList}>{problemsContent}</ul>;\n}\n\nexport default ModelDeviceProblemsList;","import ModelDeviceProblem from \"@/models/types/ModelDeviceProblem\"\nimport styles from \"./SupportedModelPopoverContent.module.css\"\nimport LlmSpeed from \"@/components/llmSpeed/LlmSpeed\";\nimport ModelDeviceProblemsList from \"@/models/ModelDeviceProblemsList\";\nimport { AUTO_SELECT_ID } from \"./interactions/models\";\n\ntype Props = {\n  modelId:string,\n  appBehaviorSummary:string,\n  problems:ModelDeviceProblem[]|null;\n  inputCharsPerSec:number;\n  outputCharsPerSec:number;\n}\n\nfunction SupportedModelPopoverContent({modelId, appBehaviorSummary, problems, inputCharsPerSec, outputCharsPerSec}:Props) {\n  const speedContent = inputCharsPerSec > 0 || outputCharsPerSec > 0\n    ? <div className={styles.speedContainer}><LlmSpeed inputCharsPerSec={inputCharsPerSec} outputCharsPerSec={outputCharsPerSec} /></div>\n    : null;\n  const modelIdContent = modelId === AUTO_SELECT_ID ? 'Auto Select Model' : modelId;\n  return (\n    <div className={styles.container}>\n      <div className={styles.modelIdText}>{modelIdContent}</div>\n      <p className={styles.appBehaviorSummary}>{appBehaviorSummary}</p>\n      <ModelDeviceProblemsList problems={problems} />\n      {speedContent}\n    </div>\n  );\n}\n\nexport default SupportedModelPopoverContent;","import { useState, useEffect, ReactNode } from \"react\";\n\nimport SupportedModelSetting from \"@/settings/types/SupportedModelSetting\";\nimport styles from \"./Setters.module.css\";\nimport Selector from \"@/components/selector/Selector\";\nimport { ValidateSettingCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport { handleValidation } from \"./setterUtil\";\nimport SupportedModelPopoverContent from \"./SupportedModelPopoverContent\";\nimport Direction from \"@/components/popOver/types/Direction\";\nimport { initModelOptions, ModelOption } from \"./interactions/models\";\n\ntype Props = {\n  setting:SupportedModelSetting,\n  onChange:(setting:SupportedModelSetting, isValid:boolean) => void,\n  onValidateSetting?:ValidateSettingCallback,\n  disabled?:boolean\n}\n\nfunction _renderPopoverContent(modelOptions:ModelOption[]):ReactNode[]|undefined {\n  return modelOptions.map(option => <SupportedModelPopoverContent \n    key={option.id}\n    modelId={option.id}\n    appBehaviorSummary={option.appBehaviorSummary}\n    problems={option.problems}\n    inputCharsPerSec={option.inputCharsPerSec}\n    outputCharsPerSec={option.outputCharsPerSec}\n  />);\n}\n\nfunction SupportedModelSetter({ setting, onChange, onValidateSetting, disabled }:Props) {\n  const [lastValidValue, setLastValidValue] = useState<string>(setting.value);\n  const [validationMessage, setValidationMessage] = useState<string|null>(null);\n  const [modelOptions, setModelOptions] = useState<ModelOption[]>([]);\n\n  useEffect(() => {\n    initModelOptions(setting.models, setModelOptions);\n  }, [setting.models])\n\n  function _onChange(nextModelId:string) {\n    const nextSetting = { ...setting, value:nextModelId };\n    const isValid = handleValidation(nextSetting, lastValidValue, setValidationMessage, onValidateSetting);\n    if (isValid) setLastValidValue(nextSetting.value);\n    onChange(nextSetting, isValid);\n  }\n  const validationContent = validationMessage ? <div className={styles.validationMessage}>{validationMessage}</div> : null;\n\n  const availableModelCount = setting.models.length;\n\n  const labelClass = disabled ? styles.labelDisabled : styles.label;\n  const popoverContent:ReactNode[]|undefined = _renderPopoverContent(modelOptions);\n  let selectedOptionNo = modelOptions.findIndex(o => o.id === setting.value);\n  if (selectedOptionNo === -1) selectedOptionNo = 0; // If the model is not found, default to the first one.\n  const content = availableModelCount === 0\n    ? <span>LLM is not used by app.</span>\n    : <Selector\n        optionNames={modelOptions.map(o => o.displayName)}\n        iconChars={modelOptions.map(o => o.iconChar)}\n        selectedOptionNo={selectedOptionNo}\n        onChange={optionI => _onChange(modelOptions[optionI].id)}\n        disabled={disabled}\n        popoverContent={popoverContent}\n        popoverPreferredDirection={Direction.BELOW}\n      />;\n  return (\n    <div className={styles.container}>\n      <span className={labelClass}>{setting.label}</span>\n      {content}\n      {validationContent}\n    </div>\n  );\n}\n\nexport default SupportedModelSetter;","import SettingCategory from \"@/settings/types/SettingCategory\";\nimport { ValidateSettingCallback } from \"../types/AppSettingsCallbacks\";\nimport Setting from \"@/settings/types/Setting\";\nimport styles from \"./SettingCategoryPanel.module.css\";\nimport SettingType from \"@/settings/types/SettingType\";\nimport BooleanToggleSetter from \"./setters/BooleanToggleSetter\";\nimport NumericSetter from \"./setters/NumericSetter\";\nimport TextSetter from \"./setters/TextSetter\";\nimport Heading from \"./setters/Heading\";\nimport { useState } from \"react\";\nimport { collateSettingRows, findDisabledSettings } from \"@/settings/settingsUtil\";\nimport { HEADING_TYPE } from \"@/settings/types/Heading\";\nimport BooleanToggleSetting from \"@/settings/types/BooleanToggleSetting\";\nimport NumericSetting from \"@/settings/types/NumericSetting\";\nimport TextSetting from \"@/settings/types/TextSetting\";\nimport SupportedModelSetter from \"./setters/SupportedModelSetter\";\nimport SupportedModelSetting from \"../types/SupportedModelSetting\";\n\ntype Props = {\n  category:SettingCategory,\n  isOpen:boolean,\n  onChange:(nextCategory:SettingCategory, isValid:boolean) => void,\n  onValidateSetting?:ValidateSettingCallback\n};\n\nfunction _onChangeSetting(category:SettingCategory, settingNo:number, nextSetting:Setting, \n  isValid:boolean, validities:boolean[], setValidities:Function, \n  onChange:Function) {\n  \n  const nextCategoryValidities = [...validities];\n  if (validities[settingNo] !== isValid) {  \n    nextCategoryValidities[settingNo] = isValid;\n    setValidities(nextCategoryValidities);\n  }\n  const isEverySettingValid = !nextCategoryValidities.includes(false);\n\n  const nextCategory = { ...category };\n  nextCategory.settings[settingNo] = nextSetting;\n  onChange(nextCategory, isEverySettingValid);\n}\n\nfunction _renderSetters(category:SettingCategory, validities:boolean[], setValidities:Function, \n    onChange:Function, onValidateSetting?:ValidateSettingCallback) {\n\n  const setterRows = collateSettingRows(category);\n  if (!setterRows.length) return <p>No settings are available.</p>;\n  \n  const disabledSettings = findDisabledSettings(category);\n  return setterRows.map((settingRow, settingRowNo) => {\n    const settingNo = category.settings.findIndex((s) => s.id === settingRow.id);\n    switch (settingRow.type) {\n      case SettingType.BOOLEAN_TOGGLE:\n        const booleanToggleSetting = settingRow as BooleanToggleSetting; \n      return <BooleanToggleSetter key={settingRow.id} setting={booleanToggleSetting}\n        onValidateSetting={onValidateSetting} \n        onChange={(nextSetting, isValid) => _onChangeSetting(category, settingNo, nextSetting, isValid, validities, setValidities, onChange)} \n        disabled={disabledSettings.includes(booleanToggleSetting.id)}\n      />\n\n      case SettingType.NUMERIC:\n        const numericSetting = settingRow as NumericSetting;\n      return <NumericSetter key={settingRow.id} setting={numericSetting}\n        onValidateSetting={onValidateSetting} \n        onChange={(nextSetting, isValid) => _onChangeSetting(category, settingNo, nextSetting, isValid, validities, setValidities, onChange)} \n        disabled={disabledSettings.includes(numericSetting.id)}\n      />\n\n      case SettingType.TEXT:\n        const textSetting = settingRow as TextSetting;\n      return <TextSetter key={settingRow.id} setting={textSetting}\n        onValidateSetting={onValidateSetting}\n        onChange={(nextSetting, isValid) => _onChangeSetting(category, settingNo, nextSetting, isValid, validities, setValidities, onChange)} \n        disabled={disabledSettings.includes(textSetting.id)}\n      />\n\n      case SettingType.SUPPORTED_MODEL:\n          const supportedModelSetting = settingRow as SupportedModelSetting;\n      return <SupportedModelSetter key={settingRow.id} setting={supportedModelSetting}\n        onValidateSetting={onValidateSetting}\n        onChange={(nextSetting, isValid) => _onChangeSetting(category, settingNo, nextSetting, isValid, validities, setValidities, onChange)}\n        disabled={disabledSettings.includes(supportedModelSetting.id)}\n      />\n\n      case HEADING_TYPE:\n      return <Heading key={`heading@${settingRowNo}`} heading={settingRow} />\n      \n      default:\n        throw Error('Unexpected');\n    }\n  });\n}\n\nfunction SettingCategoryPanel({ category, onValidateSetting, onChange, isOpen }: Props) {\n  const [validities, setValidities] = useState<boolean[]>(Array(category.settings.length).fill(true));\n\n  const settersContent = _renderSetters(category, validities, setValidities, onChange, onValidateSetting);\n\n  if (!isOpen) return null;\n  \n  return (\n    <div className={styles.container}>\n      <p>{category.description}</p>\n      <div className={styles.setterList}>\n        {settersContent}\n      </div>\n    </div>\n  );\n}\n\nexport default SettingCategoryPanel;","import styles from './DialogFooter.module.css';\nimport {PropsWithChildren} from \"react\";\n\ninterface IProps {}\n\nfunction DialogFooter(props:PropsWithChildren<IProps>) {\n  const {children} = props;\n  return (\n    <div className={styles.container}>\n      {children}\n    </div>\n  );\n}\n\nexport default DialogFooter;","import styles from './DialogButton.module.css';\n\ninterface IProps {\n  text:string,\n  onClick:any,\n  disabled?:boolean,\n  isPrimary?:boolean\n}\n\nfunction DialogButton(props:IProps) {\n  const { text, onClick, disabled, isPrimary } = props;\n  const buttonClass = disabled \n    ? styles.dialogButtonDisabled \n    : isPrimary \n      ? styles.dialogButtonPrimary\n      : styles.dialogButton;\n  const textClass = disabled ? styles.dialogButtonTextDisabled : styles.dialogButtonText;\n  return (\n    <button className={buttonClass} onClick={onClick} disabled={disabled}>\n      <span className={textClass}>{text}</span>\n    </button>\n  );\n}\n\nexport default DialogButton;","import { saveSettingCategories } from \"@/settings/settingsUtil\";\nimport { SaveAppSettingsCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport SettingCategory from \"@/settings/types/SettingCategory\";\n\nexport async function saveAndClose(categories:SettingCategory[], onClose:Function, onSaveAppSettings?:SaveAppSettingsCallback): Promise<void> {\n  await saveSettingCategories(categories, onSaveAppSettings);\n  onClose(categories[0].settings);\n}","import ModalDialog from \"./ModalDialog\";\nimport DialogButton from \"./DialogButton\";\nimport DialogFooter from \"./DialogFooter\";\n\ninterface IProps {\n  isOpen: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n}\n\nfunction PageRefreshConfirmDialog(props: IProps) {\n  const { isOpen, onCancel, onConfirm } = props;\n  \n  return (\n    <ModalDialog isOpen={isOpen} title=\"LLM Changed\" onCancel={onCancel}>\n      <p>\n        Would you like to reload the app to use the new LLM that you chose?\n      </p>\n      <DialogFooter>\n        <DialogButton text=\"Not Now\" onClick={onCancel} />\n        <DialogButton text=\"Refresh Page\" onClick={onConfirm} isPrimary />\n      </DialogFooter>\n    </ModalDialog>\n  );\n}\n\nexport default PageRefreshConfirmDialog;","import { useState, useEffect, useRef, useMemo } from \"react\";\n\nimport ModalDialog from \"@/components/modalDialogs/ModalDialog\";\nimport Setting from \"@/settings/types/Setting\";\nimport { LoadAppSettingsCallback, SaveAppSettingsCallback, ValidateSettingCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport SettingCategory from \"@/settings/types/SettingCategory\";\nimport { init } from \"./interactions/initialization\";\nimport SettingCategorySelector from \"./SettingCategorySelector\";\nimport SettingCategoryPanel from \"./SettingCategoryPanel\";\nimport DialogFooter from \"../../components/modalDialogs/DialogFooter\";\nimport DialogButton from \"../../components/modalDialogs/DialogButton\";\nimport AppSettingCategory from \"@/settings/types/AppSettingCategory\";\nimport { saveAndClose } from \"./interactions/saving\";\nimport { findOpeningCategoryNo, setOpeningCategoryId } from \"@/components/decentBar/interactions/opening\";\nimport PageRefreshConfirmDialog from \"@/components/modalDialogs/PageRefreshConfirmDialog\";\nimport { APP_SETTINGS_LLM_ID } from \"@/settings/categories/appSettingsUtil\";\n\n// The settings dialog is intended to eventually contain cross-device settings. But as I write this, there are no\n// cross-device capabilities. So the dialog has the title \"Device Settings\" for now, and later it may be renamed to \"Settings\",\n// with some indication in category panels that the settings are device-specific or cross-device.\n\ntype Props = {\n  isOpen:boolean,\n  defaultAppSettings:AppSettingCategory,\n  onClose:(appSettings:Setting[]) => void,\n  onLoadAppSettings?:LoadAppSettingsCallback,\n  onSaveAppSettings?:SaveAppSettingsCallback,\n  onValidateSetting?:ValidateSettingCallback\n}\n\nfunction SettingsDialog({isOpen, defaultAppSettings, onClose, onLoadAppSettings, onSaveAppSettings, onValidateSetting}: Props) {\n  const initialAppSettingsRef = useRef<AppSettingCategory>(defaultAppSettings);\n  const [categories, setCategories] = useState<SettingCategory[]>([]);\n  const [selectedCategoryNo, setSelectedCategoryNo] = useState<number>(0);\n  const [categoryValidities, setCategoryValidities] = useState<boolean[]>(Array(categories.length).fill(true));\n  const [showRefreshDialog, setShowRefreshDialog] = useState<boolean>(false);\n  const [initialLlmValue, setInitialLlmValue] = useState<string | null>(null);\n\n  const categoryNames = useMemo(() => categories.map(c => c.name), [categories]);\n\n  function _updateCategory(categoryNo:number, nextCategory:SettingCategory, isValid:boolean) {\n    const nextCategoryValidities = [...categoryValidities];\n    if (categoryValidities[categoryNo] !== isValid) {\n      nextCategoryValidities[categoryNo] = isValid;\n      setCategoryValidities(nextCategoryValidities);\n    }\n    const nextCategories = [...categories];\n    nextCategories[categoryNo] = nextCategory;\n    setCategories(nextCategories);\n  }\n\n  useEffect(() => {\n    if (!isOpen) return;\n    init(initialAppSettingsRef.current, onLoadAppSettings).then(initCategories => {\n      setCategories(initCategories);\n      setSelectedCategoryNo(findOpeningCategoryNo(initCategories));\n      \n      // Store initial LLM value for comparison\n      const appCategory = initCategories[0]; // App category is always first\n      const llmSetting = appCategory.settings.find(s => s.id === APP_SETTINGS_LLM_ID);\n      setInitialLlmValue(llmSetting?.value ? String(llmSetting.value) : null);\n    });\n  }, [isOpen, onLoadAppSettings]);\n\n  if (!isOpen || !categories.length) return null;\n\n  const isSaveDisabled = categoryValidities.includes(false);\n\n  function _handleSaveAndClose() {\n    // Check if LLM value has changed\n    const appCategory = categories[0]; // App category is always first\n    const llmSetting = appCategory.settings.find(s => s.id === APP_SETTINGS_LLM_ID);\n    const currentLlmValue = llmSetting?.value ? String(llmSetting.value) : null;\n    \n    if (initialLlmValue !== currentLlmValue) {\n      // LLM has changed, show confirmation dialog\n      setShowRefreshDialog(true);\n    } else {\n      // No LLM change, proceed normally\n      saveAndClose(categories, onClose, onSaveAppSettings);\n    }\n  }\n\n  function _handleRefreshConfirm() {\n    saveAndClose(categories, () => {\n      onClose(categories[0].settings);\n      // Refresh the page\n      window.location.reload();\n    }, onSaveAppSettings);\n  }\n\n  function _handleRefreshCancel() {\n    setShowRefreshDialog(false);\n    // Still save and close, but don't refresh\n    saveAndClose(categories, onClose, onSaveAppSettings);\n  }\n\n  return (\n    <>\n      <ModalDialog title=\"Device Settings\" isOpen={isOpen} onCancel={() => onClose(categories[0].settings)}>\n        <SettingCategorySelector \n          selectedCategoryNo={selectedCategoryNo} \n          categoryNames={categoryNames} \n          onChange={(nextCategoryNo) => { setSelectedCategoryNo(nextCategoryNo); setOpeningCategoryId(categories[nextCategoryNo].id); }} \n          disabled={isSaveDisabled} \n        />\n        { categories.map((category, categoryNo) => (\n          <SettingCategoryPanel key={category.name} category={category} isOpen={selectedCategoryNo === categoryNo} \n            onValidateSetting={onValidateSetting}\n            onChange={(nextCategory, isValid) => _updateCategory(categoryNo, nextCategory, isValid)} />\n        )) }\n        <DialogFooter>\n          <DialogButton text=\"Cancel\" onClick={onClose} />\n          <DialogButton text=\"Save and Exit\" onClick={_handleSaveAndClose} isPrimary disabled={isSaveDisabled}/>\n        </DialogFooter>\n      </ModalDialog>\n      \n      <PageRefreshConfirmDialog \n        isOpen={showRefreshDialog}\n        onConfirm={_handleRefreshConfirm}\n        onCancel={_handleRefreshCancel}\n      />\n    </>\n  );\n}\n\nexport default SettingsDialog;","import SettingCategory from \"@/settings/types/SettingCategory\";\nimport { LoadAppSettingsCallback } from \"@/settings/types/AppSettingsCallbacks\";\nimport { loadSettingCategories } from \"@/settings/settingsUtil\";\nimport AppSettingCategory from \"@/settings/types/AppSettingCategory\";\n\nexport async function init(defaultAppCategory:AppSettingCategory, onLoadAppSettings?:LoadAppSettingsCallback):Promise<SettingCategory[]> {\n  return await loadSettingCategories(defaultAppCategory, onLoadAppSettings);\n}","import styles from './ToastMessage.module.css';\nimport Toast, {ToastState, ToastType} from \"./Toast\";\nimport {doesToastTypeRequireDismissing} from \"./toastUtil\";\n\ninterface IProps {\n  onDismiss:() => void,\n  toast:Toast,\n  toastState:ToastState\n}\n\nfunction _getContainerStyleForType(type:ToastType):string {\n  switch (type) {\n    case ToastType.ERROR: return styles.containerError;\n    case ToastType.IMPORTANT: return styles.containerImportant;\n    default: return styles.containerInfo;\n  }\n}\n\nfunction _getAnimationStyleForState(state:ToastState):string {\n  switch (state) {\n    case ToastState.APPEARING: return styles.containerAppear;\n    case ToastState.DISAPPEARING: return styles.containerDisappear;\n    default: return '';\n  }\n}\n\nfunction ToastMessage(props:IProps) {\n  const {onDismiss, toast, toastState} = props;\n  const {message, type} = toast;\n  const showDismissIcon = doesToastTypeRequireDismissing(type);\n  \n  const containerStyle = `${_getContainerStyleForType(type)} ${_getAnimationStyleForState(toastState)}`;\n  const dismissIcon = showDismissIcon ? <div className={styles.dismissIcon} onClick={onDismiss}>✖</div> : null;\n  \n  return <div className={containerStyle} onClick={onDismiss}><p>{message}</p>{dismissIcon}</div>;\n}\n\nexport default ToastMessage;","import styles from './ToastPane.module.css';\nimport Toast, {ToastState} from \"./Toast\";\nimport ToastMessage from \"./ToastMessage\";\nimport {\n  doesToastTypeRequireDismissing,\n  subscribeToToasts,\n  unsubscribeFromToasts\n} from \"./toastUtil\";\n\nimport {MutableRefObject, useEffect, useRef, useState} from \"react\";\n\ntype TrackedToast = Toast & {\n  id:number,\n  state:ToastState, \n  lastStateTime:number,\n  requiresDismissing:boolean\n}\n\nlet toastIdCounter = 0;\n\nconst ANIMATION_INTERVAL_MSECS = 200;\nconst APPEAR_DURATION_MSECS = 1000;\nconst MESSAGE_DURATION_MSECS = 5000;\nconst DISAPPEAR_DURATION_MSECS = 1000;\n\nfunction _trackNewToast(toastsRef:MutableRefObject<TrackedToast[]>, newToast:Toast) {\n  const oldToasts = toastsRef.current;\n  const now = Date.now();\n  const id = ++toastIdCounter;\n  const requiresDismissing = doesToastTypeRequireDismissing(newToast.type);\n  const newTrackedToast = {...newToast, state:ToastState.APPEARING, lastStateTime:now, id, requiresDismissing};\n  toastsRef.current = [...oldToasts, newTrackedToast];\n}\n\nfunction _dismissToast(toastId:number, toastsRef:MutableRefObject<TrackedToast[]>) {\n  const oldToasts = toastsRef.current;\n  const now = Date.now();\n  toastsRef.current = oldToasts.map((toast) => {\n    if (toast.id !== toastId) return toast;\n    if (toast.state === ToastState.DISAPPEARING) return {...toast, requiresDismissing:false};\n    return {...toast, requiresDismissing:false, lastStateTime:now, state:ToastState.DISAPPEARING};\n  });\n}\n\nfunction _updateTrackedToastsForAnimation(toastsRef:MutableRefObject<TrackedToast[]>) {\n  const oldToasts = toastsRef.current;\n  const now = Date.now();\n  let changed = false;\n  const updatedToasts = oldToasts.map((toast) => {\n    const {state, lastStateTime, requiresDismissing} = toast;\n    const timeSinceLastState = now - lastStateTime;\n    switch (state) {\n      case ToastState.APPEARING:\n        if (timeSinceLastState < APPEAR_DURATION_MSECS) return toast;\n        changed = true;\n        return {...toast, state:ToastState.VISIBLE, lastStateTime:now};\n      case ToastState.VISIBLE:\n        if (requiresDismissing || timeSinceLastState < MESSAGE_DURATION_MSECS) return toast;\n        changed = true;\n        return {...toast, state:ToastState.DISAPPEARING, lastStateTime:now};\n      case ToastState.DISAPPEARING:\n        if (timeSinceLastState < DISAPPEAR_DURATION_MSECS) return toast;\n        changed = true;\n        return {...toast, state:ToastState.GONE, lastStateTime:now};\n      default:\n        return toast;\n    }\n  });\n  if (changed) toastsRef.current = updatedToasts.filter((toast) => toast.state !== ToastState.GONE);\n}\n\nfunction ToastPane() {\n  const toastsRef = useRef<TrackedToast[]>([]);\n  const [frameNo, setFrameNo] = useState<number>(0);\n\n  const onNewToast = (newToast:Toast) => _trackNewToast(toastsRef, newToast);\n  \n  _updateTrackedToastsForAnimation(toastsRef);\n  \n  useEffect(() => {\n    subscribeToToasts(onNewToast);\n    return () => unsubscribeFromToasts(onNewToast);\n  },[]);\n  \n  useEffect(() => {\n    setTimeout(() => setFrameNo(frameNo + 1), ANIMATION_INTERVAL_MSECS);\n  }, [frameNo, setFrameNo]);\n  \n  const renderedToasts = toastsRef.current.map((toast) => (\n    <ToastMessage toast={toast} toastState={toast.state} key={toast.id} onDismiss={() => _dismissToast(toast.id, toastsRef)}/>\n  ));\n  return (\n    <div className={styles.container}>\n      {renderedToasts}\n    </div>\n  );\n}\n\nexport default ToastPane;","import { applyLoggingSettings, setAppName } from \"@/localLogging/logUtil\";\nimport { getLoggingSettings } from \"@/settings/categories/loggingSettingsUtil\";\nimport { isServingFromEnabledDomain } from \"../decentBarUtil\";\nimport { initOpening } from \"./opening\";\n\nfunction _findFavIconLink() {\n  return document.querySelector<HTMLLinkElement>('link[rel~=\"icon\"][sizes=\"192x192\"]') ||\n    document.querySelector<HTMLLinkElement>('link[rel~=\"icon\"]');\n}\n\nexport type InitResults = {\n  favIconUrl:string|null,\n  isDecentBarEnabled:boolean\n}\n\nexport async function init(appName:string, enabledDomains:string[], setModalDialogName:Function):Promise<InitResults> {\n  try {\n    initOpening(setModalDialogName);\n    const loggingSettings = await getLoggingSettings();\n    await applyLoggingSettings(loggingSettings);\n    setAppName(appName);\n  } catch(e) {\n    console.error('Error applying logging settings:', e);\n  }\n\n  let favIconUrl = null;\n  const isDecentBarEnabled = isServingFromEnabledDomain(enabledDomains);\n  const link = _findFavIconLink();\n  favIconUrl = link ? link.href : null;\n  return { isDecentBarEnabled, favIconUrl };\n}","import { useEffect, useRef, useState, JSX } from 'react';\n\nimport styles from './DecentBar.module.css';\nimport ContentButton from '../contentButton/ContentButton';\nimport { getBaseUrl } from './decentBarUtil';\nimport DecentBarCssOverrides from './types/DecentBarCssOverrides';\nimport Link from './types/Link';\nimport SettingsIcon from './icons/cog.svg';\nimport SettingsDialog from '../../settings/settingsDialog/SettingsDialog';\nimport { LoadAppSettingsCallback, SaveAppSettingsCallback, ValidateSettingCallback } from '../../settings/types/AppSettingsCallbacks';\nimport AppSettingCategory from '../../settings/types/AppSettingCategory';\nimport ToastPane from '../toasts/ToastPane';\nimport { init } from './interactions/initialization';\nimport { getAppName } from '@/appMetadata/appMetadataUtil';\n\n// Default domains where the decent bar is rendered. Can be overridden in props.\nconst DEFAULT_ENABLED_DOMAINS = ['decentapps.net', '127.0.0.1', 'localhost'];\n\n/**\n * Props for the DecentBar component.\n * @typedef {Object} Props\n * @property {string} [appName] - Optional name of the application displayed in the bar. If not provided, it will be derived from the app metadata.\n * @property {Link[]} [appLinks] - Optional array of links displayed as buttons in the bar.\n * @property {string} [contributorText] - Optional text displayed in the contributor section.\n * @property {string[]} [enabledDomains] - Optional list of domains where the bar is enabled. Defaults to ['decentapps.net', '127.0.0.1', 'localhost'].\n * @property {string} [homeUrl] - Optional URL for the home link. Defaults to the base URL.\n * @property {(link: Link) => void} [onClickLink] - Optional callback for handling link clicks. Defaults to `defaultOnClickLink`.\n * @property {DecentBarCssOverrides} [classNameOverrides] - Optional overrides for CSS class names.\n * @property {AppSettingCategory} [defaultAppSettings] - Optional default application settings.\n * @property {LoadAppSettingsCallback} [onLoadAppSettings] - Optional callback for loading application settings.\n * @property {SaveAppSettingsCallback} [onSaveAppSettings] - Optional callback for saving application settings.\n * @property {ValidateSettingCallback} [onValidateSetting] - Optional callback for validating application settings.\n */\ntype Props = {\n  appName?:string,\n  appLinks?:Link[],\n  contributorText?:string,\n  enabledDomains?:string[],\n  homeUrl?:string,\n  onClickLink?:(link:Link) => void,\n  classNameOverrides?:DecentBarCssOverrides,\n  defaultAppSettings?:AppSettingCategory,\n  onLoadAppSettings?:LoadAppSettingsCallback,\n  onSaveAppSettings?:SaveAppSettingsCallback,\n  onValidateSetting?:ValidateSettingCallback\n}\n\n/**\n * Default callback for handling link clicks.\n * Opens the link in a new tab if it is an external link, or in the same tab if it is on the same domain.\n * Logs an error if the link URL does not start with \"http\".\n * @param {Link} link - The link object containing the URL and description.\n */\nexport function defaultOnClickLink(link:Link) {\n  if (link.url.startsWith('http')) {\n    const isSameDomain = link.url.startsWith(getBaseUrl());\n    const target = isSameDomain ? '_self' : '_blank';\n    window.open(link.url, target);\n  } else {\n    console.error('Link URL does not start with \"http\"--navigation canceled.', link.url);\n  }\n}\n\nfunction _appLinksContent(links:Link[], onClickLink:Function) {\n  if (!links.length) return <>&nbsp;</>; // Returning something keeps the layout from breaking or needing more complexity to handle empty links.\n  const linkButtons = links.map((link, buttonNo) => {\n    return (\n      <ContentButton key={buttonNo} text={link.description} onClick={() => {onClickLink(link)}}/>\n     ); \n  });\n  return <>Links:<br />{linkButtons}</>;\n}\n\nfunction _createDefaultAppSettings(appName:string):AppSettingCategory {\n  return {\n    description: `These settings apply solely to ${appName}, while other settings apply to all apps.`,\n    settings: []\n  }\n}\n\n/**\n * DecentBar component.\n * Renders a customizable bar with application links, contributor text, and settings.\n * @param {Props} props - The props for the DecentBar component.\n * @returns {JSX.Element | null} The rendered DecentBar component or null if conditions are not met.\n */\nfunction DecentBar({ \n    appName = getAppName(), \n    appLinks, \n    contributorText, \n    onClickLink = defaultOnClickLink, \n    enabledDomains = DEFAULT_ENABLED_DOMAINS, \n    homeUrl = getBaseUrl(),\n    classNameOverrides = {},\n    defaultAppSettings,\n    onLoadAppSettings,\n    onSaveAppSettings,\n    onValidateSetting\n  }: Props): JSX.Element | null {\n  const initialAppSettings = useRef<AppSettingCategory>(defaultAppSettings || _createDefaultAppSettings(appName));\n  const [favIconUrl, setFavIconUrl] = useState<string | null>(null);\n  const [modalDialogName, setModalDialogName] = useState<string | null>(null);\n\n  useEffect(() => {\n    init(appName, enabledDomains, setModalDialogName).then(initResults => {\n      if (!initResults.isDecentBarEnabled) {\n        console.log('DecentBar did not render because the current domain is not in the enabled domains list.'); // This is sometimes what the developer wants.\n        return;\n      }\n      if (!initResults.favIconUrl) {\n        console.error('DecentBar did not render because no favicon image was set.');\n        return;\n      }\n      setFavIconUrl(initResults.favIconUrl);\n    });\n  }, []);\n\n  if (!favIconUrl) return null; // First render, no favicon is found, or not serving from an enabled domain.\n\n  const appLinksContent = _appLinksContent(appLinks || [], onClickLink);\n\n  const containerClassName = `${styles.container} ${classNameOverrides?.container ?? ''}`;\n  const decentFacetClassName = `${styles.decentFacet} ${classNameOverrides?.decentFacet ?? ''}`;\n  const favIconClassName = `${styles.favIcon} ${classNameOverrides?.favIcon ?? ''}`;\n  const appFacetClassName = `${styles.appFacet} ${classNameOverrides?.appFacet ?? ''}`;\n  const appNameClassName = `${styles.appName} ${classNameOverrides?.appName ?? ''}`;\n  const appButtonAreaClassName = `${styles.appButtonArea} ${classNameOverrides?.appButtonArea ?? ''}`;\n  const appFacetSeparatorClassName = `${styles.appFacetSeparator} ${classNameOverrides?.appFacetSeparator ?? ''}`;\n  const contributorFacetClassName = `${styles.contributorFacet} ${classNameOverrides?.contributorFacet ?? ''}`;\n  const settingsIconClassName = `${styles.settingsIcon} ${classNameOverrides?.settingsIcon ?? ''}`;\n\n  return (\n    <>\n      <div className={ containerClassName }>\n        <div className={ decentFacetClassName }>\n          <a href={homeUrl}>\n            <img src={favIconUrl} className={ favIconClassName } draggable=\"false\"/>\n          </a>  \n        </div>\n        <div className={ appFacetClassName }>\n          <div className={ appNameClassName }>{appName}</div>\n          <div className={ appButtonAreaClassName }>\n            {appLinksContent}\n          </div>\n        </div>\n        <div className={ appFacetSeparatorClassName }/>\n        <div className={ contributorFacetClassName }>\n          {contributorText}\n          <img src={SettingsIcon} className={settingsIconClassName} alt=\"Device Settings\" onClick={() => setModalDialogName(SettingsDialog.name)}/>\n        </div>\n      </div>\n      <SettingsDialog \n        isOpen={modalDialogName === SettingsDialog.name} \n        defaultAppSettings={initialAppSettings.current} \n        onClose={() => setModalDialogName(null)} \n        onLoadAppSettings={onLoadAppSettings}\n        onSaveAppSettings={onSaveAppSettings}\n        onValidateSetting={onValidateSetting}\n      />\n      <ToastPane />\n    </>\n  )\n}\n\nexport default DecentBar;","import { useState, useEffect, JSX } from 'react';\n\nimport { assert } from '../common/assertUtil';\nimport ModalDialog from \"../components/modalDialogs/ModalDialog\";\nimport ModelDeviceProblem from \"./types/ModelDeviceProblem\"\nimport DialogFooter from \"../components/modalDialogs/DialogFooter\";\nimport DialogButton from \"../components/modalDialogs/DialogButton\";\nimport styles from './ModelDeviceProblemsDialog.module.css';\nimport ModelDeviceProblemType from './types/ModelDeviceProblemType';\nimport ModelDeviceProblemsList from './ModelDeviceProblemsList';\nimport { openSettingsDialog } from '../components/decentBar/interactions/opening';\nimport { APP_CATEGORY_ID } from '../settings/categories/appSettingsUtil';\nimport { findOtherModelCount } from './interactions/initialization';\nimport SupportedModel from '../appMetadata/types/SupportedModel';\n\ntype Props = {\n  isOpen:boolean,\n  modelId:string,\n  onConfirm:() => void,\n  onCancel:() => void,\n  problems:ModelDeviceProblem[]|null,\n  supportedModels?:SupportedModel[] // If you don't pass anything, they'll be retrieved from app meta data.\n}\n\nfunction _getOtherModelsAvailableText(otherModelCount:number):string {\n  if (otherModelCount === 0) return '';\n  return otherModelCount === 1 ? ' Another model supported by this app is available.' : ` Other models supported by this app are available.` \n}\n\nfunction _renderFooterButtons(hasBlockingProblem:boolean, otherModelCount:number, onCancel:() => void, onConfirm:() => void) {\n    const buttons:JSX.Element[] = [];\n    if (otherModelCount > 0) {\n      buttons.push(\n        <DialogButton key=\"otherModels\" text={'Other Models'} onClick={() => { onCancel(); openSettingsDialog(APP_CATEGORY_ID); }} disabled={!otherModelCount} />\n      );\n    }\n    buttons.push(\n      <DialogButton key=\"cancel\" text={'Cancel'} onClick={onCancel} isPrimary={hasBlockingProblem}/>\n    );\n    if (!hasBlockingProblem) {\n      buttons.push(\n        <DialogButton key=\"loadModel\" text={'Load Model'} onClick={onConfirm} isPrimary />\n      );\n    }\n    return buttons;\n  }\n\nfunction ModelDeviceProblemsDialog({isOpen, problems, onConfirm, onCancel, modelId, supportedModels}:Props) {\n  const [otherModelCount, setOtherModelCount] = useState<number|null>(null);\n\n  useEffect(() => { // It works well to set otherModelCount before the dialog is open, because the value won't be affected by the dialog opening or anything else in the session.\n    findOtherModelCount(supportedModels).then(setOtherModelCount);\n  }, []);\n\n  if (!isOpen || !problems || otherModelCount === null) return null;\n\n  assert(problems.length >= 1);\n\n  // Developer mode means pause before loading the model, but if there are other problems besides that, \n  // those problems would already need a pause before loading the model, so remove developer mode from problems in that case.\n  const isDeveloperMode = problems.length === 1 && problems[0].type === ModelDeviceProblemType.DEVELOPER_MODE;\n  if (problems.length > 1) problems = problems.filter(p => p.type !== ModelDeviceProblemType.DEVELOPER_MODE);\n\n  const hasBlockingProblem = problems.some(p => p.isBlocking);\n  \n  const summaryContent = isDeveloperMode \n    ? <p>Development environment detected. Paused loading <span className={styles.modelIdText}>{modelId}</span> until you confirm.</p>\n    : problems.length === 1 \n      ? <p>The following problem was found for loading <span className={styles.modelIdText}>{modelId}</span>:</p>\n      : <p>The following problems were found for loading <span className={styles.modelIdText}>{modelId}</span>:</p>;\n\n  const otherModelsAvailableText = _getOtherModelsAvailableText(otherModelCount);\n  const conclusionMessage = hasBlockingProblem\n    ? `This model can't be loaded.${otherModelsAvailableText}`\n    : `You can continue loading the model if you want.${otherModelsAvailableText}`;\n\n  const footerButtons = _renderFooterButtons(hasBlockingProblem, otherModelCount, onCancel, onConfirm);\n  \n  return (\n    <ModalDialog isOpen={isOpen} title={hasBlockingProblem ? 'Failed to Load Model' : 'Continue Loading Model?'} onCancel={onCancel}>\n      {summaryContent}\n      <div className={styles.problemPanel}>\n        <ModelDeviceProblemsList problems={problems} />\n      </div>\n      <p className={styles.continueText}>{conclusionMessage}</p>\n      <DialogFooter>\n        {footerButtons}\n      </DialogFooter>\n    </ModalDialog>\n  );\n}\n\nexport default ModelDeviceProblemsDialog;","import { getAppMetaData } from \"@/appMetadata/appMetadataUtil\";\nimport SupportedModel from \"@/appMetadata/types/SupportedModel\";\n\nexport async function findOtherModelCount(supportedModels?:SupportedModel[]):Promise<number> {\n  if (!supportedModels) {\n    const appMetaData = await getAppMetaData();\n    supportedModels = appMetaData.supportedModels;\n  }\n  return Math.max(0, supportedModels.length - 1);\n}"],"names":["process","env","NODE_ENV","getComponentNameFromType","type","$$typeof","REACT_CLIENT_REFERENCE","displayName","name","REACT_FRAGMENT_TYPE","REACT_PROFILER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_ACTIVITY_TYPE","tag","console","error","REACT_PORTAL_TYPE","REACT_CONTEXT_TYPE","REACT_CONSUMER_TYPE","_context","REACT_FORWARD_REF_TYPE","innerType","render","REACT_MEMO_TYPE","REACT_LAZY_TYPE","_payload","_init","x","testStringCoercion","value","checkKeyStringCoercion","JSCompiler_inline_result","e","JSCompiler_temp_const","JSCompiler_inline_result$jscomp$0","Symbol","toStringTag","constructor","call","getTaskName","UnknownOwner","Error","elementRefGetterWithDeprecationWarning","componentName","this","didWarnAboutElementRef","props","ref","jsxDEVImpl","config","maybeKey","isStaticChildren","source","self","debugStack","debugTask","dispatcher","children","isArrayImpl","length","validateChildKeys","Object","freeze","hasOwnProperty","keys","filter","k","join","didWarnAboutKeySpread","getter","getOwnPropertyDescriptor","get","isReactWarning","key","hasValidKey","propName","warnAboutAccessingKey","specialPropKeyWarningShown","defineProperty","configurable","defineKeyPropWarningGetter","owner","REACT_ELEMENT_TYPE","_owner","enumerable","_store","writable","ReactElement","ReactSharedInternals","A","getOwner","node","validated","React","require$$0","for","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","prototype","Array","isArray","createTask","unknownOwnerDebugStack","react_stack_bottom_frame","callStackForError","bind","unknownOwnerDebugTask","reactJsxRuntime_development","Fragment","jsx","trackActualOwner","recentlyCreatedOwnerStacks","jsxs","jsxRuntimeModule","exports","jsxProd","reactJsxRuntime_production","require$$1","ContentButton","text","onClick","disabled","buttonClass","styles","textClass","className","getBaseUrl","url","URL","window","location","href","protocol","hostname","port","_doNothing","event","stopPropagation","ModalDialog","isOpen","onCancel","title","fullscreenOverlayStyle","onMouseDown","HEADING_TYPE","duplicateHeading","heading","buttons","DB_NAME","KEY_VALUE_STORE","PATH_INDEX_NAME","SCHEMA","__version","__options","keyPath","__indexes","keypath","options","unique","multiEntry","_createStores","db","schema","storeNames","_getStoreNamesFromSchema","forEach","storeName","storeSchema","store","createObjectStore","indexConfig","createIndex","async","_open","version","Promise","resolve","reject","request","indexedDB","open","onerror","target","errorCode","onupgradeneeded","result","onsuccess","_put","objectToStore","transaction","objectStore","put","oncomplete","_getRecordByKey","record","_event","_get","appDataVersion","_upgradeRecord","getText","setText","mimeType","fieldName","fieldValue","path","pathEnd","lastIndexOf","substring","keyToPath","lastModified","Date","now","_setFieldValue","deleteByKey","delete","_delete","_categoryNameToPath","categoryName","getCategorySettings","settingsJson","settings","JSON","parse","maybeValues","every","setCategorySettings","settingValues","stringify","isSupportedModelFormat","maybeModel","id","appBehaviorSummary","beta","duplicateSupportedModel","model","SettingType","assertNonNullable","message","assert","condition","botch","duplicateSetting","setting","BOOLEAN_TOGGLE","NUMERIC","duplicateNumericSetting","SUPPORTED_MODEL","models","map","duplicateSupportedModelSetting","TEXT","duplicateTextSetting","duplicateDisablementRule","rule","mergeSettingValuesIntoCategory","category","nextCategory","description","headings","disablementRules","duplicateSettingCategory","nextSettings","settingId","defaultSettingIndex","i","_findMatchingSettingIndex","mergeSettingValuesIntoSettings","settingsToSettingValues","_isSizePart","part","toLowerCase","lastChar","indexOf","c","_isDistillPart","_normalizeFamilyName","lower","upper","toUpperCase","_hasMixedCase","slice","_toInitialCap","_normalizeSize","createMovingAverage","seriesMax","series","lastAverage","updateMovingAverage","nextValue","movingAverageData","push","shift","sum","reduce","acc","val","ModelDeviceProblemType","estimateAvailableStorage","globalThis","navigator","gpu","storage","estimate","quota","usage","isMovingAverageDataFormat","obj","_modelIdToKey","modelId","_createModelDeviceHistory","loadSuccessRate","loadTime","inputCharsPerSec","outputCharsPerSec","getModelDeviceHistory","json","history","GIGABYTE","MEGABYTE","LLM_CATEGORY_ID","LLM_SETTING_MAX_SIZE","LLM_SETTING_AUTO_INC_MAX_SIZE","_getDefaultMaxLlmSize","availableMemory","deviceMemory","performance","Math","floor","memory","jsHeapSizeLimit","availableMemoryGB","round","max","loadLlmSettingCategory","label","minValue","maxValue","precedeSettingId","theAppMetaData","getAppName","initAppMetaData","appMetaData","appMetaDataUrl","response","fetch","ok","status","statusText","fetchAppMetadataText","maybeAppMetaData","supportedModels","getAppMetaData","theCurrentModelInfo","_findModelRequiredMemory","theModelList","vramRequiredMb","mb","decimalPlaces","pow","mbToGb","_setCurrentModel","requiredMemoryGb","requiredStorageGb","_saveCurrentModel","setModelDeviceHistory","_describeBadLoadSuccessHistory","attemptCount","failCount","s","successCount","_describeBadPerformanceHistory","inputTokensPerSec","outputTokensPerSec","inputRate","toFixed","outputRate","_describeInsufficientStorage","wasSuccessfulBefore","availableStorage","neededStorage","_describeInsufficientMemory","maxLlmSize","predictModelDeviceProblems","problems","WEBGPU_NOT_AVAILABLE","isBlocking","BAD_LOAD_SUCCESS_HISTORY","BAD_PERFORMANCE_HISTORY","getMaxLlmSize","some","INSUFFICIENT_VRAM","INSUFFICIENT_STORAGE","hostName","match","isIpAddress","isServingLocally","DEVELOPER_MODE","scoreModel","isBetaModel","p","loadCount","score","AUTO_SELECT_ID","AUTO_SELECT_OPTION","originalIndex","iconChar","initModelOptions","setModelOptions","modelNicknames","modelOptions","otherNicknames","familyName","size","distillName","parts","split","trim","partI","nickname","nicknameNumber","n","startsWith","nicknameModelId","sortedModelOptions","sort","a","b","unshift","secondModelOptions","optionI","option","o","BETA","APP_CATEGORY_ID","APP_SETTINGS_LLM_ID","getAppCategoryId","appId","pathname","_appSettingCategoryToSettingCategory","appCategory","_addAppLlmSettingIfMissing","h","_addAppLlmHeadingIfMissing","getAppSettings","ToastType","ToastState","toastManager","_subscriptions","sendToast","toast","callback","subscribe","includes","unsubscribe","index","splice","infoToast","INFO","errorToast","ERROR","doesToastTypeRequireDismissing","IMPORTANT","getDayPath","timestamp","date","getFullYear","toString","padStart","getMonth","getDate","_dayPathToKey","dayPath","_keyToDayPath","endsWith","getLogTextForDay","setLogTextForDay","deleteLogTextForDay","findAllLoggedDays","getAllKeys","getAllKeysAtPath","localeCompare","UNINITIALIZED_DAY_PATH","theDayBuffer","theDayBufferPath","thePreviousDayPath","thePreviousDayEntryCount","theDebouncedWriteTimer","theAppName","theLoggingSettings","_getMaxRetentionDays","LOGGING_SETTING_MAX_RETENTION_DAYS","_writeDayBuffer","previousDayBuffer","log","flushImmediately","warn","LOGGING_SETTING_ENABLE","logText","_initDayBuffer","timePrefix","toLocaleTimeString","hour","minute","second","setTimeout","_getPastDayPath","daysAgo","copyLogsToClipboard","includeDayCount","Infinity","dayPaths","oldestDayPath","dayLogText","_getLogText","clipboard","writeText","applyLoggingSettings","loggingSettings","promises","all","deleteOldLogMessages","ButtonAction","onLogSettingsButtonClick","deleteAllLogMessages","LOGGING_CATEGORY_ID","_getLoggingDefaultSettings","allowDecimals","COPY_ALL_LOGS","COPY_TODAY_LOGS","CLEAR_LOGS","onButtonClick","targetSettingId","criteriaSettingId","criteriaValue","theSetModalDialogName","theOpeningCategoryId","setOpeningCategoryId","categoryId","findOpeningCategoryNo","categories","selectedCategoryNo","findIndex","_findCategoryNoById","openSettingsDialog","SettingsDialog","loadSettingCategories","defaultAppCategory","onLoadAppSettings","appSettings","overrideAppSettings","loadAppSettingCategory","loadLoggingSettingCategory","saveSettingCategories","onSaveAppSettings","appCategoryId","applyLlmSettings","Direction","DEFAULT_DIRECTIONS","ABOVE","BELOW","RIGHT","LEFT","_domRectToRect","rect","left","top","width","height","offsetFunctions","_doesRectContainRect","containerRect","innerRect","calcPopoverPositionStyle","tryDirections","targetElement","popoverContentElement","targetRect","getBoundingClientRect","popoverRect","browserRect","document","documentElement","tryRect","dx","dy","firstDx","firstDy","directionI","direction","fixedRect","_fixOobRect","transform","t","POPOVER_HIDDEN_STYLE","visibility","Popover","content","preferredDirection","allowedDirections","setIsOpen","useState","setTryDirections","popoverPositionStyle","setPopoverPositionStyle","containerRef","useRef","contentRef","useEffect","directions","d","getTryDirections","contentBoxStyle","_onMouseOut","current","relatedTarget","isInsideContent","contains","popoverContent","createPortal","contentBox","style","onMouseOut","body","container","onMouseOver","nextPopoverPositionStyle","Selector","optionNames","onChange","selectedOptionNo","displayAsTabs","popoverPreferredDirection","popoverAllowedDirections","iconChars","iconClass","iconDisabled","icon","optionName","optionNo","selectorButtonSelected","selectorButtonSelectedReclickable","selected","selectorButtonDisabled","selectorButton","selectorButtonTextDisabled","selectorButtonTextSelected","selectorButtonText","tabButton","firstSelectorButton","lastSelectorButton","iconContent","optionButtonContent","_onOptionClick","labelElement","bar","SettingsCategorySelector","categoryNames","LAST_VALID_VALUE","theValidationMessageDelayMs","theValidationMessageTimers","Map","_clearValidationMessageTimer","previousTimer","clearTimeout","handleValidation","nextSetting","lastValidValue","setValidationMessage","onValidateSetting","validationFailure","failReason","timer","set","_setValidationMessageTimer","BooleanToggleSetter","setLastValidValue","validationMessage","validationContent","falseLabel","trueLabel","labelClass","labelDisabled","isValid","_onChange","getDigitCount","digitCount","log10","abs","NumericInput","digitWidth","inputValue","setInputValue","digitWidthStyle","setDigitWidthStyle","_textToValidNumber","number","Number","isNaN","replace","_stripNonNumeric","nextDigitWidthStyle","_createDigitWidthStyle","_handleChange","onBlur","_handleBlur","NumericSetter","TextSetter","placeholder","HeadingButton","headingButtonDisabled","headingButton","headingButtonTextDisabled","headingButtonText","_renderButtons","button","Heading","buttonsContent","buttonsContainer","headingClass","headingDisabled","_getRateText","prefix","rate","INPUT_PREFIX","OUTPUT_PREFIX","FRAME_INTERVAL","LlmSpeed","frameNo","setFrameNo","renderTiming","startTime","inputDuration","outputDuration","_calcRenderTiming","inputText","useMemo","outputText","inputProgress","outputProgress","overallTime","elapsed","_calcProgress","interval","clearInterval","inputSpeedBox","progressBar","overTextBar","outputSpeedBox","InsufficientMemoryIcon","InsufficientStorageIcon","BadLoadSuccessIcon","BadPerformanceIcon","DeveloperIcon","BetaIcon","_renderProblemIcon","problemType","src","alt","ModelDeviceProblemsList","problemsContent","problem","problemI","problemList","SupportedModelPopoverContent","speedContent","speedContainer","modelIdContent","modelIdText","SupportedModelSetter","availableModelCount","_renderPopoverContent","nextModelId","_onChangeSetting","settingNo","validities","setValidities","nextCategoryValidities","isEverySettingValid","_renderSetters","setterRows","rows","precedingHeading","find","lastHeading","collateSettingRows","disabledSettings","criteriaSetting","findDisabledSettings","settingRow","settingRowNo","booleanToggleSetting","numericSetting","textSetting","supportedModelSetting","SettingCategoryPanel","fill","settersContent","setterList","DialogFooter","DialogButton","isPrimary","dialogButtonDisabled","dialogButtonPrimary","dialogButton","dialogButtonTextDisabled","dialogButtonText","saveAndClose","onClose","PageRefreshConfirmDialog","onConfirm","defaultAppSettings","initialAppSettingsRef","setCategories","setSelectedCategoryNo","categoryValidities","setCategoryValidities","showRefreshDialog","setShowRefreshDialog","initialLlmValue","setInitialLlmValue","init","then","initCategories","llmSetting","String","isSaveDisabled","SettingCategorySelector","nextCategoryNo","categoryNo","nextCategories","_updateCategory","currentLlmValue","reload","ToastMessage","onDismiss","toastState","showDismissIcon","containerStyle","_getContainerStyleForType","state","APPEARING","DISAPPEARING","_getAnimationStyleForState","dismissIcon","toastIdCounter","ToastPane","toastsRef","onNewToast","newToast","oldToasts","requiresDismissing","newTrackedToast","lastStateTime","_trackNewToast","changed","updatedToasts","timeSinceLastState","VISIBLE","GONE","_updateTrackedToastsForAnimation","unsubscribeFromToasts","renderedToasts","toastId","_dismissToast","appName","enabledDomains","setModalDialogName","initOpening","getLoggingSettings","setAppName","favIconUrl","isDecentBarEnabled","currentDomain","domain","isServingFromEnabledDomain","link","querySelector","DEFAULT_ENABLED_DOMAINS","defaultOnClickLink","appLinks","contributorText","onClickLink","homeUrl","classNameOverrides","initialAppSettings","_createDefaultAppSettings","setFavIconUrl","modalDialogName","initResults","appLinksContent","links","linkButtons","buttonNo","_appLinksContent","containerClassName","decentFacetClassName","decentFacet","favIconClassName","favIcon","appFacetClassName","appFacet","appNameClassName","appButtonAreaClassName","appButtonArea","appFacetSeparatorClassName","appFacetSeparator","contributorFacetClassName","contributorFacet","settingsIconClassName","settingsIcon","draggable","otherModelCount","setOtherModelCount","findOtherModelCount","isDeveloperMode","hasBlockingProblem","summaryContent","otherModelsAvailableText","_getOtherModelsAvailableText","conclusionMessage","footerButtons","_renderFooterButtons","appSettingValues","settingsModelId","bestScore","bestI","modelI","successfulLoad","successfulLoadSize","ceil","incrementMaxLlmSizeAfterSuccessfulLoad","requestTime","firstResponseTime","lastResponseTime","inputCharCount","outputCharCount","requestTimestamp","firstResponseTimestamp","lastResponseTimestamp","inputTime","outputTime","_calculatePerformance"],"mappings":"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","x_google_ignoreList":[0,1,2]}